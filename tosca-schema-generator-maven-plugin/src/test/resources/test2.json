{
  "$schema" : "https://json-schema.org/draft/2020-12/schema",
  "type" : "object",
  "title" : "ETSI NFV SOL 001 vnfd types definitions version 4.2.1",
  "description" : "ETSI NFV SOL 001 vnfd types definitions version 4.2.1",
  "properties" : {
    "tosca_definitions_version" : {
      "type" : "string"
    },
    "description" : {
      "type" : "string"
    },
    "repositories" : {
      "type" : "object"
    },
    "interface_types" : {
      "type" : "object"
    },
    "node_types" : {
      "type" : "object"
    },
    "imports" : {
      "type" : "array",
      "items" : {
        "oneOf" : [ {
          "type" : "string",
          "format" : "uri"
        }, {
          "type" : "object",
          "properties" : {
            "file" : {
              "type" : "string"
            },
            "repository" : {
              "type" : "string"
            },
            "namespace_uri" : {
              "type" : "string",
              "format" : "uri"
            },
            "namespace_prefix" : {
              "type" : "string"
            }
          },
          "required" : [ "file", "repository", "namespace_uri", "namespace_prefix" ],
          "additionalProperties" : false
        } ]
      }
    },
    "topology_template" : {
      "type" : "object",
      "properties" : {
        "inputs" : {
          "type" : "object"
        },
        "node_templates" : {
          "type" : "object",
          "patternProperties" : {
            "^" : {
              "properties" : {
                "type" : {
                  "type" : "string"
                }
              },
              "required" : [ "type" ],
              "allOf" : [ {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.entity.Root"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.entity.Root"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.Root"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.Root"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.Abstract.Compute"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.Abstract.Compute"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.Compute"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.Compute"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.SoftwareComponent"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.SoftwareComponent"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.WebServer"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.WebServer"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.WebApplication"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.WebApplication"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.DBMS"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.DBMS"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.Database"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.Database"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.Abstract.Storage"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.Abstract.Storage"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.Storage.ObjectStorage"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.Storage.ObjectStorage"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.Storage.BlockStorage"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.Storage.BlockStorage"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.Container.Runtime"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.Container.Runtime"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.Container.Application"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.Container.Application"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.LoadBalancer"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.LoadBalancer"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.network.Network"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.network.Network"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.network.Port"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.network.Port"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.nfv.VNF"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.nfv.VNF"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.nfv.VnfExtCp"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.nfv.VnfExtCp"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.nfv.Vdu.Compute"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.nfv.Vdu.Compute"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.nfv.Vdu.VirtualBlockStorage"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.nfv.Vdu.VirtualBlockStorage"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.nfv.Vdu.VirtualObjectStorage"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.nfv.Vdu.VirtualObjectStorage"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.nfv.Vdu.VirtualFileStorage"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.nfv.Vdu.VirtualFileStorage"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.nfv.VduCp"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.nfv.VduCp"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.nfv.VnfVirtualLink"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.nfv.VnfVirtualLink"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.nfv.VipCp"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.nfv.VipCp"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.nfv.VduSubCp"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.nfv.VduSubCp"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.nfv.Vdu.OsContainer"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.nfv.Vdu.OsContainer"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.nfv.Vdu.OsContainerDeployableUnit"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.nfv.Vdu.OsContainerDeployableUnit"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.nfv.Mciop"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.nfv.Mciop"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.nfv.VirtualCp"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.nfv.VirtualCp"
                }
              }, {
                "if" : {
                  "properties" : {
                    "type" : {
                      "const" : "tosca.nodes.nfv.Cp"
                    }
                  }
                },
                "then" : {
                  "$ref" : "#/$defs/tosca.nodes.nfv.Cp"
                }
              } ]
            }
          }
        }
      }
    },
    "policies" : {
      "type" : "object",
      "patternProperties" : {
        "^" : {
          "properties" : {
            "type" : {
              "type" : "string"
            }
          },
          "required" : [ "type" ],
          "allOf" : [ {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "tosca.policies.Root"
                }
              }
            },
            "then" : {
              "$ref" : "#/$defs/tosca.policies.Root"
            }
          }, {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "tosca.policies.Placement"
                }
              }
            },
            "then" : {
              "$ref" : "#/$defs/tosca.policies.Placement"
            }
          }, {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "tosca.policies.Scaling"
                }
              }
            },
            "then" : {
              "$ref" : "#/$defs/tosca.policies.Scaling"
            }
          }, {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "tosca.policies.Update"
                }
              }
            },
            "then" : {
              "$ref" : "#/$defs/tosca.policies.Update"
            }
          }, {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "tosca.policies.Performance"
                }
              }
            },
            "then" : {
              "$ref" : "#/$defs/tosca.policies.Performance"
            }
          }, {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "tosca.policies.nfv.InstantiationLevels"
                }
              }
            },
            "then" : {
              "$ref" : "#/$defs/tosca.policies.nfv.InstantiationLevels"
            }
          }, {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "tosca.policies.nfv.VduInstantiationLevels"
                }
              }
            },
            "then" : {
              "$ref" : "#/$defs/tosca.policies.nfv.VduInstantiationLevels"
            }
          }, {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "tosca.policies.nfv.VirtualLinkInstantiationLevels"
                }
              }
            },
            "then" : {
              "$ref" : "#/$defs/tosca.policies.nfv.VirtualLinkInstantiationLevels"
            }
          }, {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "tosca.policies.nfv.ScalingAspects"
                }
              }
            },
            "then" : {
              "$ref" : "#/$defs/tosca.policies.nfv.ScalingAspects"
            }
          }, {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "tosca.policies.nfv.VduScalingAspectDeltas"
                }
              }
            },
            "then" : {
              "$ref" : "#/$defs/tosca.policies.nfv.VduScalingAspectDeltas"
            }
          }, {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "tosca.policies.nfv.VirtualLinkBitrateScalingAspectDeltas"
                }
              }
            },
            "then" : {
              "$ref" : "#/$defs/tosca.policies.nfv.VirtualLinkBitrateScalingAspectDeltas"
            }
          }, {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "tosca.policies.nfv.VduInitialDelta"
                }
              }
            },
            "then" : {
              "$ref" : "#/$defs/tosca.policies.nfv.VduInitialDelta"
            }
          }, {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "tosca.policies.nfv.VirtualLinkBitrateInitialDelta"
                }
              }
            },
            "then" : {
              "$ref" : "#/$defs/tosca.policies.nfv.VirtualLinkBitrateInitialDelta"
            }
          }, {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "tosca.policies.nfv.AffinityRule"
                }
              }
            },
            "then" : {
              "$ref" : "#/$defs/tosca.policies.nfv.AffinityRule"
            }
          }, {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "tosca.policies.nfv.AntiAffinityRule"
                }
              }
            },
            "then" : {
              "$ref" : "#/$defs/tosca.policies.nfv.AntiAffinityRule"
            }
          }, {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "tosca.policies.nfv.SupportedVnfInterface"
                }
              }
            },
            "then" : {
              "$ref" : "#/$defs/tosca.policies.nfv.SupportedVnfInterface"
            }
          }, {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "tosca.policies.nfv.SecurityGroupRule"
                }
              }
            },
            "then" : {
              "$ref" : "#/$defs/tosca.policies.nfv.SecurityGroupRule"
            }
          }, {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "tosca.policies.nfv.VnfIndicator"
                }
              }
            },
            "then" : {
              "$ref" : "#/$defs/tosca.policies.nfv.VnfIndicator"
            }
          }, {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "tosca.policies.nfv.VnfPackageChange"
                }
              }
            },
            "then" : {
              "$ref" : "#/$defs/tosca.policies.nfv.VnfPackageChange"
            }
          }, {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "tosca.policies.nfv.LcmCoordinationAction"
                }
              }
            },
            "then" : {
              "$ref" : "#/$defs/tosca.policies.nfv.LcmCoordinationAction"
            }
          }, {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "tosca.policies.nfv.LcmCoordinationsForLcmOperation"
                }
              }
            },
            "then" : {
              "$ref" : "#/$defs/tosca.policies.nfv.LcmCoordinationsForLcmOperation"
            }
          }, {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "tosca.policies.nfv.Abstract.SecurityGroupRule"
                }
              }
            },
            "then" : {
              "$ref" : "#/$defs/tosca.policies.nfv.Abstract.SecurityGroupRule"
            }
          } ]
        }
      }
    },
    "groups" : {
      "type" : "object"
    }
  },
  "$defs" : {
    "tosca.entity.Root" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "tosca.nodes.Root" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : { }
        },
        "capabilities" : {
          "properties" : { }
        }
      }
    },
    "tosca.nodes.Abstract.Compute" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : { }
        },
        "capabilities" : {
          "properties" : {
            "host" : {
              "properties" : {
                "num_cpus" : {
                  "type" : "number"
                },
                "name" : {
                  "type" : "string"
                },
                "disk_size" : {
                  "type" : "string"
                },
                "cpu_frequency" : {
                  "type" : "string"
                },
                "mem_size" : {
                  "type" : "string"
                }
              },
              "additionalProperties" : false
            }
          }
        }
      }
    },
    "tosca.nodes.Compute" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : { }
        },
        "capabilities" : {
          "properties" : {
            "scalable" : {
              "properties" : {
                "min_instances" : {
                  "type" : "number"
                },
                "max_instances" : {
                  "type" : "number"
                },
                "default_instances" : {
                  "type" : "number"
                }
              },
              "required" : [ "min_instances", "max_instances" ],
              "additionalProperties" : false
            },
            "endpoint" : {
              "properties" : {
                "secure" : {
                  "type" : "boolean"
                }
              },
              "required" : [ "secure" ],
              "additionalProperties" : false
            },
            "os" : {
              "properties" : {
                "type" : {
                  "type" : "string"
                },
                "distribution" : {
                  "type" : "string"
                },
                "version" : {
                  "type" : "string"
                },
                "architecture" : {
                  "type" : "string"
                }
              },
              "additionalProperties" : false
            },
            "host" : {
              "properties" : {
                "num_cpus" : {
                  "type" : "number"
                },
                "name" : {
                  "type" : "string"
                },
                "disk_size" : {
                  "type" : "string"
                },
                "cpu_frequency" : {
                  "type" : "string"
                },
                "mem_size" : {
                  "type" : "string"
                }
              },
              "additionalProperties" : false
            }
          }
        }
      }
    },
    "tosca.nodes.SoftwareComponent" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "admin_credential" : {
              "properties" : {
                "protocol" : {
                  "type" : "string"
                },
                "keys" : {
                  "type" : "object",
                  "patternProperties" : {
                    "^" : {
                      "type" : "string",
                      "additionalProperties" : false
                    }
                  }
                },
                "token_type" : {
                  "type" : "string"
                },
                "user" : {
                  "type" : "string"
                },
                "token" : {
                  "type" : "string"
                }
              },
              "required" : [ "token_type", "token" ]
            },
            "component_version" : {
              "type" : "string"
            }
          },
          "additionalProperties" : false
        }
      }
    },
    "tosca.nodes.WebServer" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "admin_credential" : {
              "properties" : {
                "protocol" : {
                  "type" : "string"
                },
                "keys" : {
                  "type" : "object",
                  "patternProperties" : {
                    "^" : {
                      "type" : "string",
                      "additionalProperties" : false
                    }
                  }
                },
                "token_type" : {
                  "type" : "string"
                },
                "user" : {
                  "type" : "string"
                },
                "token" : {
                  "type" : "string"
                }
              },
              "required" : [ "token_type", "token" ]
            },
            "component_version" : {
              "type" : "string"
            }
          }
        },
        "capabilities" : {
          "properties" : {
            "data_endpoint" : {
              "properties" : {
                "port_name" : {
                  "type" : "string"
                },
                "protocol" : {
                  "type" : "string"
                },
                "port" : { },
                "initiator" : {
                  "type" : "string",
                  "enum" : [ "source", "target", "peer" ]
                },
                "network_name" : {
                  "type" : "string"
                },
                "secure" : {
                  "type" : "boolean"
                },
                "ports" : {
                  "type" : "object",
                  "patternProperties" : {
                    "^" : {
                      "properties" : {
                        "protocol" : {
                          "type" : "string",
                          "enum" : [ "udp", "tcp", "igmp" ]
                        },
                        "target_range" : {
                          "type" : "string"
                        },
                        "source" : { },
                        "target" : { }
                      },
                      "additionalProperties" : false
                    }
                  }
                },
                "url_path" : {
                  "type" : "string"
                }
              },
              "additionalProperties" : false
            },
            "admin_endpoint" : {
              "properties" : {
                "secure" : {
                  "type" : "boolean"
                }
              },
              "required" : [ "secure" ],
              "additionalProperties" : false
            },
            "host" : {
              "properties" : {
                "num_cpus" : {
                  "type" : "number"
                },
                "name" : {
                  "type" : "string"
                },
                "disk_size" : {
                  "type" : "string"
                },
                "cpu_frequency" : {
                  "type" : "string"
                },
                "mem_size" : {
                  "type" : "string"
                }
              },
              "additionalProperties" : false
            }
          }
        }
      }
    },
    "tosca.nodes.WebApplication" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "context_root" : {
              "type" : "string"
            }
          },
          "required" : [ "context_root" ],
          "additionalProperties" : false
        },
        "capabilities" : {
          "properties" : {
            "app_endpoint" : {
              "properties" : {
                "port_name" : {
                  "type" : "string"
                },
                "protocol" : {
                  "type" : "string"
                },
                "port" : { },
                "initiator" : {
                  "type" : "string",
                  "enum" : [ "source", "target", "peer" ]
                },
                "network_name" : {
                  "type" : "string"
                },
                "secure" : {
                  "type" : "boolean"
                },
                "ports" : {
                  "type" : "object",
                  "patternProperties" : {
                    "^" : {
                      "properties" : {
                        "protocol" : {
                          "type" : "string",
                          "enum" : [ "udp", "tcp", "igmp" ]
                        },
                        "target_range" : {
                          "type" : "string"
                        },
                        "source" : { },
                        "target" : { }
                      },
                      "additionalProperties" : false
                    }
                  }
                },
                "url_path" : {
                  "type" : "string"
                }
              },
              "additionalProperties" : false
            }
          }
        }
      }
    },
    "tosca.nodes.DBMS" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "port" : {
              "type" : "number",
              "description" : "The port the DBMS service will listen to for data and requests.\n"
            },
            "root_password" : {
              "type" : "string",
              "description" : "the optional root password for the DBMS service"
            },
            "admin_credential" : {
              "properties" : {
                "protocol" : {
                  "type" : "string"
                },
                "keys" : {
                  "type" : "object",
                  "patternProperties" : {
                    "^" : {
                      "type" : "string",
                      "additionalProperties" : false
                    }
                  }
                },
                "token_type" : {
                  "type" : "string"
                },
                "user" : {
                  "type" : "string"
                },
                "token" : {
                  "type" : "string"
                }
              },
              "required" : [ "token_type", "token" ]
            },
            "component_version" : {
              "type" : "string"
            }
          },
          "additionalProperties" : false
        },
        "capabilities" : {
          "properties" : {
            "host" : {
              "properties" : {
                "num_cpus" : {
                  "type" : "number"
                },
                "name" : {
                  "type" : "string"
                },
                "disk_size" : {
                  "type" : "string"
                },
                "cpu_frequency" : {
                  "type" : "string"
                },
                "mem_size" : {
                  "type" : "string"
                }
              },
              "additionalProperties" : false
            }
          }
        }
      }
    },
    "tosca.nodes.Database" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "password" : {
              "type" : "string",
              "description" : "the optional password for the DB user account"
            },
            "port" : {
              "type" : "number",
              "description" : "the port the underlying database service will listen to for data"
            },
            "name" : {
              "type" : "string",
              "description" : "the logical name of the database"
            },
            "user" : {
              "type" : "string",
              "description" : "the optional user account name for DB administration"
            }
          },
          "required" : [ "name" ],
          "additionalProperties" : false
        },
        "capabilities" : {
          "properties" : { }
        }
      }
    },
    "tosca.nodes.Abstract.Storage" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "size" : {
              "type" : "string"
            },
            "name" : {
              "type" : "string"
            }
          },
          "required" : [ "size", "name" ],
          "additionalProperties" : false
        }
      }
    },
    "tosca.nodes.Storage.ObjectStorage" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "maxsize" : {
              "type" : "string"
            },
            "size" : {
              "type" : "string"
            },
            "name" : {
              "type" : "string"
            }
          },
          "additionalProperties" : false
        },
        "capabilities" : {
          "properties" : {
            "storage_endpoint" : {
              "properties" : {
                "port_name" : {
                  "type" : "string"
                },
                "protocol" : {
                  "type" : "string"
                },
                "port" : { },
                "initiator" : {
                  "type" : "string",
                  "enum" : [ "source", "target", "peer" ]
                },
                "network_name" : {
                  "type" : "string"
                },
                "secure" : {
                  "type" : "boolean"
                },
                "ports" : {
                  "type" : "object",
                  "patternProperties" : {
                    "^" : {
                      "properties" : {
                        "protocol" : {
                          "type" : "string",
                          "enum" : [ "udp", "tcp", "igmp" ]
                        },
                        "target_range" : {
                          "type" : "string"
                        },
                        "source" : { },
                        "target" : { }
                      },
                      "additionalProperties" : false
                    }
                  }
                },
                "url_path" : {
                  "type" : "string"
                }
              },
              "additionalProperties" : false
            }
          }
        }
      }
    },
    "tosca.nodes.Storage.BlockStorage" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "volume_id" : {
              "type" : "string"
            },
            "snapshot_id" : {
              "type" : "string"
            },
            "size" : {
              "type" : "string"
            },
            "name" : {
              "type" : "string"
            }
          },
          "additionalProperties" : false
        },
        "capabilities" : {
          "properties" : { }
        }
      }
    },
    "tosca.nodes.Container.Runtime" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "admin_credential" : {
              "properties" : {
                "protocol" : {
                  "type" : "string"
                },
                "keys" : {
                  "type" : "object",
                  "patternProperties" : {
                    "^" : {
                      "type" : "string",
                      "additionalProperties" : false
                    }
                  }
                },
                "token_type" : {
                  "type" : "string"
                },
                "user" : {
                  "type" : "string"
                },
                "token" : {
                  "type" : "string"
                }
              },
              "required" : [ "token_type", "token" ]
            },
            "component_version" : {
              "type" : "string"
            }
          }
        },
        "capabilities" : {
          "properties" : {
            "scalable" : {
              "properties" : {
                "min_instances" : {
                  "type" : "number"
                },
                "max_instances" : {
                  "type" : "number"
                },
                "default_instances" : {
                  "type" : "number"
                }
              },
              "required" : [ "min_instances", "max_instances" ],
              "additionalProperties" : false
            },
            "host" : {
              "properties" : {
                "num_cpus" : {
                  "type" : "number"
                },
                "name" : {
                  "type" : "string"
                },
                "disk_size" : {
                  "type" : "string"
                },
                "cpu_frequency" : {
                  "type" : "string"
                },
                "mem_size" : {
                  "type" : "string"
                }
              },
              "additionalProperties" : false
            }
          }
        }
      }
    },
    "tosca.nodes.Container.Application" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "tosca.nodes.LoadBalancer" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "algorithm" : {
              "type" : "string"
            }
          },
          "additionalProperties" : false
        },
        "capabilities" : {
          "properties" : {
            "client" : {
              "properties" : {
                "floating" : {
                  "type" : "boolean",
                  "description" : "indicates that the public address should be allocated from a pool of floating IPs that are associated with the network.\n"
                },
                "network_name" : {
                  "type" : "string"
                },
                "dns_name" : {
                  "type" : "string",
                  "description" : "The optional name to register with DNS"
                }
              },
              "required" : [ "floating", "network_name" ],
              "additionalProperties" : false
            }
          }
        }
      }
    },
    "tosca.nodes.network.Network" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "physical_network" : {
              "type" : "string"
            },
            "dhcp_enabled" : {
              "type" : "boolean"
            },
            "segmentation_id" : {
              "type" : "string"
            },
            "network_id" : {
              "type" : "string"
            },
            "ip_version" : {
              "type" : "number",
              "enum" : [ "4", "6" ]
            },
            "start_ip" : {
              "type" : "string"
            },
            "network_name" : {
              "type" : "string"
            },
            "cidr" : {
              "type" : "string"
            },
            "gateway_ip" : {
              "type" : "string"
            },
            "network_type" : {
              "type" : "string"
            },
            "end_ip" : {
              "type" : "string"
            }
          },
          "additionalProperties" : false
        },
        "capabilities" : {
          "properties" : { }
        }
      }
    },
    "tosca.nodes.network.Port" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "ip_range_end" : {
              "type" : "string"
            },
            "ip_range_start" : {
              "type" : "string"
            },
            "ip_address" : {
              "type" : "string"
            },
            "is_default" : {
              "type" : "boolean"
            },
            "order" : {
              "type" : "number"
            }
          },
          "required" : [ "order" ],
          "additionalProperties" : false
        }
      }
    },
    "tosca.nodes.nfv.VNF" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "vnf_profile" : {
              "description" : "Describes a profile for instantiating VNFs of a particular NS DF according to a specific VNFD and VNF DF",
              "properties" : {
                "instantiation_level" : {
                  "type" : "string",
                  "description" : "Identifier of the instantiation level of the VNF DF to be used for instantiation. If not present, the default instantiation level as declared in the VNFD shall be used."
                },
                "service_availability_level" : {
                  "type" : "number",
                  "description" : "Specifies the service availability level for the VNF instance created from this profile."
                },
                "min_number_of_instances" : {
                  "type" : "number",
                  "description" : "Minimum number of instances of the VNF based on this VNFD that is permitted to exist for this VnfProfile."
                },
                "max_number_of_instances" : {
                  "type" : "number",
                  "description" : "Maximum number of instances of the VNF based on this VNFD that is permitted to exist for this VnfProfile."
                }
              },
              "required" : [ "min_number_of_instances", "max_number_of_instances" ]
            },
            "product_info_name" : {
              "type" : "string",
              "description" : "Human readable name for the VNF Product"
            },
            "default_localization_language" : {
              "type" : "string",
              "description" : "Default localization language that is instantiated if no information about selected localization language is available"
            },
            "flavour_id" : {
              "type" : "string",
              "description" : "Identifier of the Deployment Flavour within the VNFD"
            },
            "lcm_operations_configuration" : {
              "description" : "Describes the configuration parameters for the VNF LCM operations",
              "properties" : {
                "operate" : {
                  "description" : "Configuration parameters for the OperateVnf operation",
                  "properties" : {
                    "max_recommended_graceful_stop_timeout" : {
                      "type" : "string",
                      "description" : "Maximum recommended timeout value that can be needed to gracefully stop a VNF instance of a particular type under certain conditions, such as maximum load condition. This is provided by VNF provider as information for the operator facilitating the selection of optimal timeout value. This value is not used as constraint"
                    },
                    "min_graceful_stop_timeout" : {
                      "type" : "string",
                      "description" : "Minimum timeout value for graceful stop of a VNF instance"
                    }
                  },
                  "required" : [ "min_graceful_stop_timeout" ]
                },
                "scale_to_level" : {
                  "description" : "Configuration parameters for the ScaleVnfToLevel operation",
                  "properties" : {
                    "arbitrary_target_levels_supported" : {
                      "type" : "boolean",
                      "description" : "Signals whether scaling according to the parameter \"scaleInfo\" is supported by this VNF"
                    }
                  },
                  "required" : [ "arbitrary_target_levels_supported" ]
                },
                "change_current_package" : { },
                "change_flavour" : { },
                "heal" : {
                  "description" : "Configuration parameters for the HealVnf operation",
                  "properties" : {
                    "causes" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "description" : "Supported \"cause\" parameter values",
                        "additionalProperties" : false
                      }
                    }
                  }
                },
                "scale" : {
                  "description" : "Configuration parameters for the ScaleVnf operation",
                  "properties" : {
                    "scaling_by_more_than_one_step_supported" : {
                      "type" : "boolean",
                      "description" : "Signals whether passing a value larger than one in the numScalingSteps parameter of the ScaleVnf operation is supported by this VNF."
                    }
                  },
                  "required" : [ "scaling_by_more_than_one_step_supported" ]
                },
                "change_ext_connectivity" : { },
                "terminate" : {
                  "description" : "Configuration parameters for the TerminateVnf operation",
                  "properties" : {
                    "min_graceful_termination_timeout" : {
                      "type" : "string",
                      "description" : "Minimum timeout value for graceful termination of a VNF instance"
                    },
                    "max_recommended_graceful_termination_timeout" : {
                      "type" : "string",
                      "description" : "Maximum recommended timeout value that can be needed to gracefully terminate a VNF instance of a particular type under certain conditions, such as maximum load condition. This is provided by VNF provider as information for the operator facilitating the selection of optimal timeout value. This value is not used as constraint"
                    }
                  },
                  "required" : [ "min_graceful_termination_timeout" ]
                },
                "instantiate" : { },
                "revert_to_snapshot" : { },
                "create_snapshot" : { }
              }
            },
            "flavour_description" : {
              "type" : "string",
              "description" : "Human readable description of the DF"
            },
            "product_name" : {
              "type" : "string",
              "description" : "Human readable name for the VNF Product"
            },
            "descriptor_id" : {
              "type" : "string",
              "description" : "Identifier of this VNFD information element. This attribute shall be globally unique"
            },
            "product_info_description" : {
              "type" : "string",
              "description" : "Human readable description of the VNF Product"
            },
            "provider" : {
              "type" : "string",
              "description" : "Provider of the VNF and of the VNFD"
            },
            "monitoring_parameters" : {
              "type" : "object",
              "patternProperties" : {
                "^" : {
                  "description" : "Describes monitoring parameters applicable to the VNF.",
                  "properties" : {
                    "collection_period" : {
                      "type" : "string",
                      "description" : "Describes the periodicity at which to collect the performance information."
                    },
                    "performance_metric" : {
                      "type" : "string",
                      "description" : "Identifies a performance metric to be monitored, according to ETSI GS NFV-IFA 027.",
                      "enum" : [ "v_cpu_usage_mean_vnf", "v_cpu_usage_peak_vnf", "v_memory_usage_mean_vnf", "v_memory_usage_peak_vnf", "v_disk_usage_mean_vnf", "v_disk_usage_peak_vnf", "byte_incoming_vnf_ext_cp", "byte_outgoing_vnf_ext_cp", "packet_incoming_vnf_ext_cp", "packet_outgoing_vnf_ext_cp" ]
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Human readable name of the monitoring parameter"
                    }
                  },
                  "additionalProperties" : false
                }
              }
            },
            "descriptor_version" : {
              "type" : "string",
              "description" : "Identifies the version of the VNFD"
            },
            "vnfm_info" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "description" : "Identifies VNFM(s) compatible with the VNF",
                "additionalProperties" : false
              }
            },
            "software_version" : {
              "type" : "string",
              "description" : "Software version of the VNF"
            },
            "localization_languages" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "description" : "Information about localization languages of the VNF",
                "additionalProperties" : false
              }
            }
          },
          "required" : [ "flavour_id", "flavour_description", "product_name", "descriptor_id", "provider", "descriptor_version", "vnfm_info", "software_version" ],
          "additionalProperties" : false
        }
      }
    },
    "tosca.nodes.nfv.VnfExtCp" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "virtual_network_interface_requirements" : {
              "type" : "array",
              "items" : {
                "description" : "The actual virtual NIC requirements that is been assigned when instantiating the connection point",
                "properties" : {
                  "network_interface_requirements" : {
                    "type" : "object",
                    "patternProperties" : {
                      "^" : {
                        "type" : "string",
                        "description" : "The network interface requirements. A map of strings that contain a set of key-value pairs that describes the hardware platform specific  network interface deployment requirements.",
                        "additionalProperties" : false
                      }
                    }
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Provides a human readable name for the requirement."
                  },
                  "support_mandatory" : {
                    "type" : "boolean",
                    "description" : "Indicates whether fulfilling the constraint is mandatory (TRUE) for successful operation or desirable (FALSE)."
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "Provides a human readable description of the requirement."
                  },
                  "nic_io_requirements" : {
                    "description" : "references (couples) the CP with any logical node I/O requirements (for network devices) that may have been created. Linking these attributes is necessary so that so that I/O requirements that need to be articulated at the logical node level can be associated with the network interface requirements associated with the CP.",
                    "properties" : {
                      "logical_node_requirements" : {
                        "type" : "object",
                        "patternProperties" : {
                          "^" : {
                            "type" : "string",
                            "description" : "The logical node-level compute, memory and I/O requirements. A map  of strings that contains a set of key-value pairs that describes hardware platform specific deployment requirements, including the number of CPU cores on this logical node, a memory configuration specific to a logical node  or a requirement related to the association of an I/O device with the logical node.",
                            "additionalProperties" : false
                          }
                        }
                      }
                    }
                  }
                },
                "additionalProperties" : false
              }
            },
            "protocol" : {
              "type" : "array",
              "items" : {
                "description" : "Provides information on the addresses to be assigned to the connection point(s) instantiated from this Connection Point Descriptor",
                "properties" : {
                  "associated_layer_protocol" : {
                    "type" : "string",
                    "description" : "One of the values of the property layer_protocols of the CP",
                    "enum" : [ "ethernet", "mpls", "odu2", "ipv4", "ipv6", "pseudo-wire" ]
                  },
                  "address_data" : {
                    "type" : "array",
                    "items" : {
                      "description" : "Provides information on the addresses to be assigned to the CP",
                      "properties" : {
                        "address_type" : {
                          "type" : "string",
                          "description" : "Describes the type of the address to be assigned to a connection point. The content type shall be aligned with the address type supported by the layerProtocol property of the connection point",
                          "enum" : [ "mac_address", "ip_address" ]
                        },
                        "l2_address_data" : {
                          "description" : "Provides the information on the MAC addresses to be assigned to a connection point.",
                          "properties" : {
                            "mac_address_assignment" : {
                              "type" : "boolean",
                              "description" : "Specifies if the address assignment is the responsibility of management and orchestration function or not. If it is set to True, it is the management and orchestration function responsibility"
                            }
                          },
                          "required" : [ "mac_address_assignment" ]
                        },
                        "l3_address_data" : {
                          "description" : "Provides the information on the IP addresses to be assigned to a connection point",
                          "properties" : {
                            "number_of_ip_address" : {
                              "type" : "number",
                              "description" : "Minimum number of IP addresses to be assigned"
                            },
                            "fixed_ip_address" : {
                              "type" : "array",
                              "items" : {
                                "type" : "string",
                                "description" : "IP address to be assigned to the CP instance. This attribute is only permitted for Cpds without external connectivity, i.e. connectivity outside the VNF. If present, it shall be compatible with the values of the L3ProtocolData of the VnfVirtualLink referred to by the Cp, if L3ProtocolData is included in the VnfVirtualLink",
                                "additionalProperties" : false
                              }
                            },
                            "ip_address_assignment" : {
                              "type" : "boolean",
                              "description" : "Specifies if the address assignment is the responsibility of management and orchestration function or not. If it is set to True, it is the management and orchestration function responsibility"
                            },
                            "ip_address_type" : {
                              "type" : "string",
                              "description" : "Defines address type. The address type should be aligned with the address type supported by the layer_protocols properties of the connetion point",
                              "enum" : [ "ipv4", "ipv6" ]
                            },
                            "floating_ip_activated" : {
                              "type" : "boolean",
                              "description" : "Specifies if the floating IP scheme is activated on the Connection Point or not"
                            }
                          },
                          "required" : [ "ip_address_assignment", "floating_ip_activated" ]
                        }
                      },
                      "additionalProperties" : false
                    }
                  }
                },
                "additionalProperties" : false
              }
            },
            "trunk_mode" : {
              "type" : "boolean",
              "description" : "Provides information about whether the CP instantiated from this Cp is in Trunk mode (802.1Q or other), When operating in \"trunk mode\", the Cp is capable of carrying traffic for several VLANs. Absence of this property implies that trunkMode is not configured for the Cp i.e. It is equivalent to boolean value \"false\"."
            },
            "layer_protocols" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "description" : "Identifies which protocol the connection point uses for connectivity purposes",
                "additionalProperties" : false
              }
            },
            "role" : {
              "type" : "string",
              "description" : "Identifies the role of the port in the context of the traffic flow patterns in the VNF or parent NS",
              "enum" : [ "root", "leaf" ]
            },
            "description" : {
              "type" : "string",
              "description" : "Provides human-readable information on the purpose of the connection point"
            }
          },
          "additionalProperties" : false
        }
      }
    },
    "tosca.nodes.nfv.Vdu.Compute" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "boot_data" : {
              "description" : "Contains the information used to customize a virtualised compute resource at boot time. The bootData may contain variable parts that are replaced by deployment specific values before being sent to the VIM.",
              "properties" : {
                "kvp_data" : {
                  "description" : "A set of key-value pairs for configuring a virtual compute resource.",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "patternProperties" : {
                        "^" : {
                          "type" : "string",
                          "description" : "A map of strings that contains a set of key-value pairs that describes the information for configuring the virtualised compute resource.",
                          "additionalProperties" : false
                        }
                      }
                    }
                  }
                },
                "vim_specific_properties" : {
                  "description" : "Properties used for selecting VIM specific capabilities when setting the boot data.",
                  "properties" : {
                    "vim_type" : {
                      "type" : "string",
                      "description" : "Discriminator for the different types of the VIM information."
                    },
                    "properties" : {
                      "type" : "object",
                      "patternProperties" : {
                        "^" : {
                          "type" : "string",
                          "description" : "Properties used for selecting VIM specific capabilities when setting the boot data",
                          "additionalProperties" : false
                        }
                      }
                    }
                  },
                  "required" : [ "vim_type", "properties" ]
                },
                "content_or_file_data" : {
                  "description" : "A string content or a file for configuring a virtual compute resource.",
                  "properties" : {
                    "destination_path" : {
                      "type" : "string",
                      "description" : "The URL address when inject a file into the virtualised compute resource. The content shall comply with IETF RFC 3986 [8]."
                    },
                    "data" : {
                      "type" : "object",
                      "patternProperties" : {
                        "^" : {
                          "type" : "string",
                          "description" : "A map of strings that contains a set of key-value pairs that carries the dynamic deployment values which used to replace the corresponding variable parts in the file as identify by a URL as described in source_path. Shall be present if \"source_path\" is present and shall be absent otherwise..",
                          "additionalProperties" : false
                        }
                      }
                    },
                    "source_path" : {
                      "type" : "string",
                      "description" : "The URL to a file contained in the VNF package used to customize a virtualised compute resource. The content shall comply with IETF RFC 3986 [8]."
                    },
                    "content" : {
                      "type" : "string",
                      "description" : "The string information used to customize a virtualised compute resource at boot time."
                    }
                  }
                }
              }
            },
            "name" : {
              "type" : "string",
              "description" : "Human readable name of the VDU"
            },
            "nfvi_constraints" : {
              "type" : "object",
              "patternProperties" : {
                "^" : {
                  "type" : "string",
                  "description" : "Describes constraints on the NFVI for the VNFC instance(s) created from this VDU. This property is reserved for future use in the present document.",
                  "additionalProperties" : false
                }
              }
            },
            "monitoring_parameters" : {
              "type" : "object",
              "patternProperties" : {
                "^" : {
                  "description" : "Describes monitoring parameters applicable to a VNFC instantiated from this VDU",
                  "properties" : {
                    "collection_period" : {
                      "type" : "string",
                      "description" : "Describes the  periodicity at which to collect the performance information."
                    },
                    "performance_metric" : {
                      "type" : "string",
                      "description" : "Identifies a performance metric to be monitored, according to ETSI GS NFV-IFA 027.",
                      "enum" : [ "v_cpu_usage_mean_vnf", "v_cpu_usage_peak_vnf", "v_memory_usage_mean_vnf", "v_memory_usage_peak_vnf", "v_disk_usage_mean_vnf", "v_disk_usage_peak_vnf", "byte_incoming_vnf_int_cp", "byte_outgoing_vnf_int_cp", "packet_incoming_vnf_int_cp", "packet_outgoing_vnf_int_cp", "v_cpu_usage_mean", "v_cpu_usage_peak", "v_memory_usage_mean", "v_memory_usage_peak", "v_disk_usage_mean", "v_disk_usage_peak", "v_net_byte_incoming", "v_net_byte_outgoing", "v_net_packet_incoming", "v_net_packet_outgoing", "usage_mean_vStorage", "usage_peak_vStorage" ]
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Human readable name of the monitoring parameter"
                    }
                  },
                  "additionalProperties" : false
                }
              }
            },
            "description" : {
              "type" : "string",
              "description" : "Human readable description of the VDU"
            },
            "boot_order" : {
              "type" : "boolean",
              "description" : "indicates whether the order of the virtual_storage requirements is used as the boot index (the first requirement represents the lowest index and defines highest boot priority)"
            },
            "vdu_profile" : {
              "description" : "Defines additional instantiation data for the VDU.Compute node",
              "properties" : {
                "nfvi_maintenance_info" : {
                  "description" : "Provides information on the impact tolerance and rules to be observed when instance(s) of the Vdu.Compute (for VM based VDU) are impacted during NFVI operation and maintenance (e.g. NFVI resource upgrades).",
                  "properties" : {
                    "supported_migration_type" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "description" : "Specifies the allowed migration types in the order of preference in case of an impact starting with the most preferred type. It is applicable to the Vdu.Compute node and to the VirtualBlockStorage, VirtualObjectStorage and VirtualFileStorage nodes.",
                        "additionalProperties" : false
                      }
                    },
                    "impact_notification_lead_time" : {
                      "type" : "string",
                      "description" : "Specifies the minimum notification lead time requested for upcoming impact of the virtualised resource or their group (i.e. between the notification and the action causing the impact)."
                    },
                    "min_recovery_time_between_impacts" : {
                      "type" : "string",
                      "description" : "Specifies the time required by the group to recover from an impact, thus, the minimum time requested between consecutive impacts of the group.."
                    },
                    "min_number_of_preserved_instances" : {
                      "type" : "array",
                      "items" : {
                        "description" : "Specifies for different group sizes the minimum number of instances which need to be preserved simultaneously within the group of virtualised resources.",
                        "properties" : {
                          "group_size" : {
                            "type" : "number",
                            "description" : "Determines the size of the group for which the min_number_of_preserved_instances is specified. If not present the size is not limited."
                          },
                          "min_number_of_preserved_instances" : {
                            "type" : "number",
                            "description" : "The minimum number of instances which need to be preserved simultaneously within the group of the specified size."
                          }
                        },
                        "additionalProperties" : false
                      }
                    },
                    "max_number_of_impacted_instances" : {
                      "type" : "array",
                      "items" : {
                        "description" : "Specifies for different group sizes the maximum number of instances that can be impacted simultaneously within the group of virtualised resources without losing functionality.",
                        "properties" : {
                          "group_size" : {
                            "type" : "number",
                            "description" : "Determines the size of the group for which the max_number_of_impacted_instances is specified. If not present the size is not limited."
                          },
                          "max_number_of_impacted_instances" : {
                            "type" : "number",
                            "description" : "The maximum number of instances that can be impacted simultaneously within the group of the specified size."
                          }
                        },
                        "additionalProperties" : false
                      }
                    },
                    "is_impact_mitigation_requested" : {
                      "type" : "boolean",
                      "description" : "Indicates whether it is requested that at the time of the notification of an upcoming change that is expected to have an impact on the VNF, virtualised resource(s) of the same characteristics as the impacted ones is/are provided to compensate for the impact (TRUE) or not (FALSE)."
                    },
                    "max_undetectable_interruption_time" : {
                      "type" : "string",
                      "description" : "Specifies the maximum interruption time that can go undetected at the VNF level and therefore which will not trigger VNF-internal recovery during live migration. It is applicable to the Vdu.Compute node and to the VirtualBlockStorage, VirtualObjectStorage and VirtualFileStorage nodes."
                    }
                  },
                  "required" : [ "impact_notification_lead_time", "is_impact_mitigation_requested" ]
                },
                "min_number_of_instances" : {
                  "type" : "number",
                  "description" : "Minimum number of instances of the VNFC based on this Vdu.Compute (for VM based VDU) or Vdu.OsContainerDeployableUnit node (for Oscontainer based VDU) that is permitted to exist for a particular VNF deployment flavour."
                },
                "max_number_of_instances" : {
                  "type" : "number",
                  "description" : "Maximum number of instances of the VNFC based on this Vdu.Compute (for VM based VDU) or Vdu.OsContainerDeployableUnit node (for Oscontainer based VDU) that is permitted to exist for a particular VNF deployment flavour."
                }
              },
              "required" : [ "min_number_of_instances", "max_number_of_instances" ]
            }
          },
          "required" : [ "name", "description", "boot_order", "vdu_profile" ],
          "additionalProperties" : false
        },
        "capabilities" : {
          "properties" : {
            "virtual_compute" : {
              "properties" : {
                "virtual_memory" : {
                  "description" : "Describes virtual memory of the virtualized compute",
                  "properties" : {
                    "numa_enabled" : {
                      "type" : "boolean",
                      "description" : "It specifies the memory allocation to be cognisant of the relevant process/core allocation."
                    },
                    "virtual_mem_size" : {
                      "type" : "string",
                      "description" : "Amount of virtual memory."
                    },
                    "vdu_mem_requirements" : {
                      "type" : "object",
                      "patternProperties" : {
                        "^" : {
                          "type" : "string",
                          "description" : "The hardware platform specific VDU memory requirements. A map of strings that contains a set of key-value pairs that describes hardware platform specific VDU memory requirements.",
                          "additionalProperties" : false
                        }
                      }
                    },
                    "virtual_mem_oversubscription_policy" : {
                      "type" : "string",
                      "description" : "The memory core oversubscription policy in terms of virtual memory to physical memory on the platform."
                    }
                  },
                  "required" : [ "numa_enabled", "virtual_mem_size" ]
                },
                "virtual_local_storage" : {
                  "type" : "array",
                  "items" : {
                    "description" : "A list of virtual system disks created and destroyed as part of the VM lifecycle",
                    "properties" : {
                      "vdu_storage_requirements" : {
                        "type" : "object",
                        "patternProperties" : {
                          "^" : {
                            "type" : "string",
                            "description" : "The hardware platform specific storage requirements. A map of strings that contains a set of key-value pairs that represents the hardware platform specific storage deployment requirements",
                            "additionalProperties" : false
                          }
                        }
                      },
                      "size_of_storage" : {
                        "type" : "string",
                        "description" : "Size of virtualised storage resource"
                      },
                      "rdma_enabled" : {
                        "type" : "boolean",
                        "description" : "Indicates if the storage support RDMA"
                      }
                    },
                    "additionalProperties" : false
                  }
                },
                "requested_additional_capabilities" : {
                  "type" : "object",
                  "patternProperties" : {
                    "^" : {
                      "description" : "Describes additional capability for a particular VDU",
                      "properties" : {
                        "preferred_requested_additional_capability_version" : {
                          "type" : "string",
                          "description" : "Identifies the preferred version of the requested additional capability."
                        },
                        "target_performance_parameters" : {
                          "type" : "object",
                          "patternProperties" : {
                            "^" : {
                              "type" : "string",
                              "description" : "Identifies specific attributes, dependent on the requested additional capability type.",
                              "additionalProperties" : false
                            }
                          }
                        },
                        "requested_additional_capability_name" : {
                          "type" : "string",
                          "description" : "Identifies a requested additional capability for the VDU."
                        },
                        "support_mandatory" : {
                          "type" : "boolean",
                          "description" : "Indicates whether the requested additional capability is mandatory for successful operation."
                        },
                        "min_requested_additional_capability_version" : {
                          "type" : "string",
                          "description" : "Identifies the minimum version of the requested additional capability."
                        }
                      },
                      "additionalProperties" : false
                    }
                  }
                },
                "compute_requirements" : {
                  "type" : "object",
                  "patternProperties" : {
                    "^" : {
                      "type" : "string",
                      "additionalProperties" : false
                    }
                  }
                },
                "logical_node" : {
                  "type" : "object",
                  "patternProperties" : {
                    "^" : {
                      "description" : "Describes the Logical Node requirements",
                      "properties" : {
                        "logical_node_requirements" : {
                          "type" : "object",
                          "patternProperties" : {
                            "^" : {
                              "type" : "string",
                              "description" : "The logical node-level compute, memory and I/O requirements. A map  of strings that contains a set of key-value pairs that describes hardware platform specific deployment requirements, including the number of CPU cores on this logical node, a memory configuration specific to a logical node  or a requirement related to the association of an I/O device with the logical node.",
                              "additionalProperties" : false
                            }
                          }
                        }
                      },
                      "additionalProperties" : false
                    }
                  }
                },
                "virtual_cpu" : {
                  "description" : "Describes virtual CPU(s) of the virtualized compute",
                  "properties" : {
                    "virtual_cpu_oversubscription_policy" : {
                      "type" : "string",
                      "description" : "CPU core oversubscription policy e.g. the relation of virtual CPU cores to physical CPU cores/threads."
                    },
                    "cpu_architecture" : {
                      "type" : "string",
                      "description" : "CPU architecture type. Examples are x86, ARM"
                    },
                    "virtual_cpu_clock" : {
                      "type" : "string",
                      "description" : "Minimum virtual CPU clock rate"
                    },
                    "vdu_cpu_requirements" : {
                      "type" : "object",
                      "patternProperties" : {
                        "^" : {
                          "type" : "string",
                          "description" : "The hardware platform specific VDU CPU requirements. A map of strings that contains a set of key-value pairs describing VDU CPU specific hardware platform requirements.",
                          "additionalProperties" : false
                        }
                      }
                    },
                    "num_virtual_cpu" : {
                      "type" : "number",
                      "description" : "Number of virtual CPUs"
                    },
                    "virtual_cpu_pinning" : {
                      "description" : "The virtual CPU pinning configuration for the virtualised compute resource.",
                      "properties" : {
                        "virtual_cpu_pinning_policy" : {
                          "type" : "string",
                          "description" : "Indicates the policy for CPU pinning. The policy can take values of \"static\" or \"dynamic\". In case of \"dynamic\" the allocation of virtual CPU cores to logical CPU cores is decided by the VIM. (e.g. SMT (Simultaneous Multi-Threading) requirements). In case of \"static\" the allocation is requested to be according to the virtual_cpu_pinning_rule.",
                          "enum" : [ "static", "dynamic" ]
                        },
                        "virtual_cpu_pinning_rule" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string",
                            "description" : "Provides the list of rules for allocating virtual CPU cores to logical  CPU cores/threads",
                            "additionalProperties" : false
                          }
                        }
                      }
                    }
                  },
                  "required" : [ "num_virtual_cpu" ]
                }
              },
              "required" : [ "virtual_memory", "virtual_cpu" ],
              "additionalProperties" : false
            }
          }
        }
      }
    },
    "tosca.nodes.nfv.Vdu.VirtualBlockStorage" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "per_vnfc_instance" : {
              "type" : "boolean",
              "description" : "Indicates whether the virtual storage descriptor shall be instantiated per VNFC instance."
            },
            "nfvi_maintenance_info" : {
              "description" : "Provides information on the rules to be observed when an instance based on this VirtualBlockStorage is impacted during NFVI operation and maintenance (e.g. NFVI resource upgrades).",
              "properties" : {
                "supported_migration_type" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "description" : "Specifies the allowed migration types in the order of preference in case of an impact starting with the most preferred type. It is applicable to the Vdu.Compute node and to the VirtualBlockStorage, VirtualObjectStorage and VirtualFileStorage nodes.",
                    "additionalProperties" : false
                  }
                },
                "impact_notification_lead_time" : {
                  "type" : "string",
                  "description" : "Specifies the minimum notification lead time requested for upcoming impact of the virtualised resource or their group (i.e. between the notification and the action causing the impact)."
                },
                "min_recovery_time_between_impacts" : {
                  "type" : "string",
                  "description" : "Specifies the time required by the group to recover from an impact, thus, the minimum time requested between consecutive impacts of the group.."
                },
                "min_number_of_preserved_instances" : {
                  "type" : "array",
                  "items" : {
                    "description" : "Specifies for different group sizes the minimum number of instances which need to be preserved simultaneously within the group of virtualised resources.",
                    "properties" : {
                      "group_size" : {
                        "type" : "number",
                        "description" : "Determines the size of the group for which the min_number_of_preserved_instances is specified. If not present the size is not limited."
                      },
                      "min_number_of_preserved_instances" : {
                        "type" : "number",
                        "description" : "The minimum number of instances which need to be preserved simultaneously within the group of the specified size."
                      }
                    },
                    "additionalProperties" : false
                  }
                },
                "max_number_of_impacted_instances" : {
                  "type" : "array",
                  "items" : {
                    "description" : "Specifies for different group sizes the maximum number of instances that can be impacted simultaneously within the group of virtualised resources without losing functionality.",
                    "properties" : {
                      "group_size" : {
                        "type" : "number",
                        "description" : "Determines the size of the group for which the max_number_of_impacted_instances is specified. If not present the size is not limited."
                      },
                      "max_number_of_impacted_instances" : {
                        "type" : "number",
                        "description" : "The maximum number of instances that can be impacted simultaneously within the group of the specified size."
                      }
                    },
                    "additionalProperties" : false
                  }
                },
                "is_impact_mitigation_requested" : {
                  "type" : "boolean",
                  "description" : "Indicates whether it is requested that at the time of the notification of an upcoming change that is expected to have an impact on the VNF, virtualised resource(s) of the same characteristics as the impacted ones is/are provided to compensate for the impact (TRUE) or not (FALSE)."
                },
                "max_undetectable_interruption_time" : {
                  "type" : "string",
                  "description" : "Specifies the maximum interruption time that can go undetected at the VNF level and therefore which will not trigger VNF-internal recovery during live migration. It is applicable to the Vdu.Compute node and to the VirtualBlockStorage, VirtualObjectStorage and VirtualFileStorage nodes."
                }
              },
              "required" : [ "impact_notification_lead_time", "is_impact_mitigation_requested" ]
            },
            "virtual_block_storage_data" : {
              "description" : "Describes the block storage characteristics.",
              "properties" : {
                "vdu_storage_requirements" : {
                  "type" : "object",
                  "patternProperties" : {
                    "^" : {
                      "type" : "string",
                      "description" : "The hardware platform specific storage requirements. A map of strings that contains a set of key-value pairs that represents the hardware platform specific storage deployment requirements",
                      "additionalProperties" : false
                    }
                  }
                },
                "size_of_storage" : {
                  "type" : "string",
                  "description" : "Size of virtualised storage resource"
                },
                "rdma_enabled" : {
                  "type" : "boolean",
                  "description" : "Indicates if the storage support RDMA"
                }
              },
              "required" : [ "size_of_storage", "rdma_enabled" ]
            }
          },
          "required" : [ "per_vnfc_instance", "virtual_block_storage_data" ],
          "additionalProperties" : false
        },
        "capabilities" : {
          "properties" : { }
        }
      }
    },
    "tosca.nodes.nfv.Vdu.VirtualObjectStorage" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "per_vnfc_instance" : {
              "type" : "boolean",
              "description" : "Indicates whether the virtual storage descriptor shall be instantiated per VNFC instance."
            },
            "virtual_object_storage_data" : {
              "description" : "Describes the object storage characteristics.",
              "properties" : {
                "max_size_of_storage" : {
                  "type" : "string",
                  "description" : "Maximum size of virtualized  storage resource"
                }
              }
            },
            "nfvi_maintenance_info" : {
              "description" : "Provides information on the rules to be observed when an instance based on this VirtualObjectStorage is impacted during NFVI operation and maintenance (e.g. NFVI resource upgrades).",
              "properties" : {
                "supported_migration_type" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "description" : "Specifies the allowed migration types in the order of preference in case of an impact starting with the most preferred type. It is applicable to the Vdu.Compute node and to the VirtualBlockStorage, VirtualObjectStorage and VirtualFileStorage nodes.",
                    "additionalProperties" : false
                  }
                },
                "impact_notification_lead_time" : {
                  "type" : "string",
                  "description" : "Specifies the minimum notification lead time requested for upcoming impact of the virtualised resource or their group (i.e. between the notification and the action causing the impact)."
                },
                "min_recovery_time_between_impacts" : {
                  "type" : "string",
                  "description" : "Specifies the time required by the group to recover from an impact, thus, the minimum time requested between consecutive impacts of the group.."
                },
                "min_number_of_preserved_instances" : {
                  "type" : "array",
                  "items" : {
                    "description" : "Specifies for different group sizes the minimum number of instances which need to be preserved simultaneously within the group of virtualised resources.",
                    "properties" : {
                      "group_size" : {
                        "type" : "number",
                        "description" : "Determines the size of the group for which the min_number_of_preserved_instances is specified. If not present the size is not limited."
                      },
                      "min_number_of_preserved_instances" : {
                        "type" : "number",
                        "description" : "The minimum number of instances which need to be preserved simultaneously within the group of the specified size."
                      }
                    },
                    "additionalProperties" : false
                  }
                },
                "max_number_of_impacted_instances" : {
                  "type" : "array",
                  "items" : {
                    "description" : "Specifies for different group sizes the maximum number of instances that can be impacted simultaneously within the group of virtualised resources without losing functionality.",
                    "properties" : {
                      "group_size" : {
                        "type" : "number",
                        "description" : "Determines the size of the group for which the max_number_of_impacted_instances is specified. If not present the size is not limited."
                      },
                      "max_number_of_impacted_instances" : {
                        "type" : "number",
                        "description" : "The maximum number of instances that can be impacted simultaneously within the group of the specified size."
                      }
                    },
                    "additionalProperties" : false
                  }
                },
                "is_impact_mitigation_requested" : {
                  "type" : "boolean",
                  "description" : "Indicates whether it is requested that at the time of the notification of an upcoming change that is expected to have an impact on the VNF, virtualised resource(s) of the same characteristics as the impacted ones is/are provided to compensate for the impact (TRUE) or not (FALSE)."
                },
                "max_undetectable_interruption_time" : {
                  "type" : "string",
                  "description" : "Specifies the maximum interruption time that can go undetected at the VNF level and therefore which will not trigger VNF-internal recovery during live migration. It is applicable to the Vdu.Compute node and to the VirtualBlockStorage, VirtualObjectStorage and VirtualFileStorage nodes."
                }
              },
              "required" : [ "impact_notification_lead_time", "is_impact_mitigation_requested" ]
            }
          },
          "required" : [ "per_vnfc_instance", "virtual_object_storage_data" ],
          "additionalProperties" : false
        },
        "capabilities" : {
          "properties" : { }
        }
      }
    },
    "tosca.nodes.nfv.Vdu.VirtualFileStorage" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "per_vnfc_instance" : {
              "type" : "boolean",
              "description" : "Indicates whether the virtual storage descriptor shall be instantiated per VNFC instance."
            },
            "virtual_file_storage_data" : {
              "description" : "Describes the file  storage characteristics.",
              "properties" : {
                "size_of_storage" : {
                  "type" : "string",
                  "description" : "Size of virtualized storage resource"
                },
                "file_system_protocol" : {
                  "type" : "string",
                  "description" : "The shared file system protocol (e.g. NFS, CIFS)"
                }
              },
              "required" : [ "size_of_storage", "file_system_protocol" ]
            },
            "nfvi_maintenance_info" : {
              "description" : "Provides information on the rules to be observed when an instance based on this VirtualFileStorage is impacted during NFVI operation and maintenance (e.g. NFVI resource upgrades).",
              "properties" : {
                "supported_migration_type" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "description" : "Specifies the allowed migration types in the order of preference in case of an impact starting with the most preferred type. It is applicable to the Vdu.Compute node and to the VirtualBlockStorage, VirtualObjectStorage and VirtualFileStorage nodes.",
                    "additionalProperties" : false
                  }
                },
                "impact_notification_lead_time" : {
                  "type" : "string",
                  "description" : "Specifies the minimum notification lead time requested for upcoming impact of the virtualised resource or their group (i.e. between the notification and the action causing the impact)."
                },
                "min_recovery_time_between_impacts" : {
                  "type" : "string",
                  "description" : "Specifies the time required by the group to recover from an impact, thus, the minimum time requested between consecutive impacts of the group.."
                },
                "min_number_of_preserved_instances" : {
                  "type" : "array",
                  "items" : {
                    "description" : "Specifies for different group sizes the minimum number of instances which need to be preserved simultaneously within the group of virtualised resources.",
                    "properties" : {
                      "group_size" : {
                        "type" : "number",
                        "description" : "Determines the size of the group for which the min_number_of_preserved_instances is specified. If not present the size is not limited."
                      },
                      "min_number_of_preserved_instances" : {
                        "type" : "number",
                        "description" : "The minimum number of instances which need to be preserved simultaneously within the group of the specified size."
                      }
                    },
                    "additionalProperties" : false
                  }
                },
                "max_number_of_impacted_instances" : {
                  "type" : "array",
                  "items" : {
                    "description" : "Specifies for different group sizes the maximum number of instances that can be impacted simultaneously within the group of virtualised resources without losing functionality.",
                    "properties" : {
                      "group_size" : {
                        "type" : "number",
                        "description" : "Determines the size of the group for which the max_number_of_impacted_instances is specified. If not present the size is not limited."
                      },
                      "max_number_of_impacted_instances" : {
                        "type" : "number",
                        "description" : "The maximum number of instances that can be impacted simultaneously within the group of the specified size."
                      }
                    },
                    "additionalProperties" : false
                  }
                },
                "is_impact_mitigation_requested" : {
                  "type" : "boolean",
                  "description" : "Indicates whether it is requested that at the time of the notification of an upcoming change that is expected to have an impact on the VNF, virtualised resource(s) of the same characteristics as the impacted ones is/are provided to compensate for the impact (TRUE) or not (FALSE)."
                },
                "max_undetectable_interruption_time" : {
                  "type" : "string",
                  "description" : "Specifies the maximum interruption time that can go undetected at the VNF level and therefore which will not trigger VNF-internal recovery during live migration. It is applicable to the Vdu.Compute node and to the VirtualBlockStorage, VirtualObjectStorage and VirtualFileStorage nodes."
                }
              },
              "required" : [ "impact_notification_lead_time", "is_impact_mitigation_requested" ]
            }
          },
          "required" : [ "per_vnfc_instance", "virtual_file_storage_data" ],
          "additionalProperties" : false
        },
        "capabilities" : {
          "properties" : { }
        }
      }
    },
    "tosca.nodes.nfv.VduCp" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "virtual_network_interface_requirements" : {
              "type" : "array",
              "items" : {
                "description" : "Specifies requirements on a virtual network interface realising  the CPs instantiated from this CPD",
                "properties" : {
                  "network_interface_requirements" : {
                    "type" : "object",
                    "patternProperties" : {
                      "^" : {
                        "type" : "string",
                        "description" : "The network interface requirements. A map of strings that contain a set of key-value pairs that describes the hardware platform specific  network interface deployment requirements.",
                        "additionalProperties" : false
                      }
                    }
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Provides a human readable name for the requirement."
                  },
                  "support_mandatory" : {
                    "type" : "boolean",
                    "description" : "Indicates whether fulfilling the constraint is mandatory (TRUE) for successful operation or desirable (FALSE)."
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "Provides a human readable description of the requirement."
                  },
                  "nic_io_requirements" : {
                    "description" : "references (couples) the CP with any logical node I/O requirements (for network devices) that may have been created. Linking these attributes is necessary so that so that I/O requirements that need to be articulated at the logical node level can be associated with the network interface requirements associated with the CP.",
                    "properties" : {
                      "logical_node_requirements" : {
                        "type" : "object",
                        "patternProperties" : {
                          "^" : {
                            "type" : "string",
                            "description" : "The logical node-level compute, memory and I/O requirements. A map  of strings that contains a set of key-value pairs that describes hardware platform specific deployment requirements, including the number of CPU cores on this logical node, a memory configuration specific to a logical node  or a requirement related to the association of an I/O device with the logical node.",
                            "additionalProperties" : false
                          }
                        }
                      }
                    }
                  }
                },
                "additionalProperties" : false
              }
            },
            "bitrate_requirement" : {
              "type" : "number",
              "description" : "Bitrate requirement in bit per second on this connection point"
            },
            "vnic_type" : {
              "type" : "string",
              "description" : "Describes the type of the virtual network interface realizing the CPs instantiated from this CPD",
              "enum" : [ "normal", "macvtap", "direct", "baremetal", "virtio-forwarder", "direct-physical", "smart-nic", "bridge", "ipvlan", "loopback", "macvlan", "ptp", "vlan", "host-device" ]
            },
            "order" : {
              "type" : "number",
              "description" : "The order of the NIC on the compute instance (e.g.eth2)"
            },
            "protocol" : {
              "type" : "array",
              "items" : {
                "description" : "Provides information on the addresses to be assigned to the connection point(s) instantiated from this Connection Point Descriptor",
                "properties" : {
                  "associated_layer_protocol" : {
                    "type" : "string",
                    "description" : "One of the values of the property layer_protocols of the CP",
                    "enum" : [ "ethernet", "mpls", "odu2", "ipv4", "ipv6", "pseudo-wire" ]
                  },
                  "address_data" : {
                    "type" : "array",
                    "items" : {
                      "description" : "Provides information on the addresses to be assigned to the CP",
                      "properties" : {
                        "address_type" : {
                          "type" : "string",
                          "description" : "Describes the type of the address to be assigned to a connection point. The content type shall be aligned with the address type supported by the layerProtocol property of the connection point",
                          "enum" : [ "mac_address", "ip_address" ]
                        },
                        "l2_address_data" : {
                          "description" : "Provides the information on the MAC addresses to be assigned to a connection point.",
                          "properties" : {
                            "mac_address_assignment" : {
                              "type" : "boolean",
                              "description" : "Specifies if the address assignment is the responsibility of management and orchestration function or not. If it is set to True, it is the management and orchestration function responsibility"
                            }
                          },
                          "required" : [ "mac_address_assignment" ]
                        },
                        "l3_address_data" : {
                          "description" : "Provides the information on the IP addresses to be assigned to a connection point",
                          "properties" : {
                            "number_of_ip_address" : {
                              "type" : "number",
                              "description" : "Minimum number of IP addresses to be assigned"
                            },
                            "fixed_ip_address" : {
                              "type" : "array",
                              "items" : {
                                "type" : "string",
                                "description" : "IP address to be assigned to the CP instance. This attribute is only permitted for Cpds without external connectivity, i.e. connectivity outside the VNF. If present, it shall be compatible with the values of the L3ProtocolData of the VnfVirtualLink referred to by the Cp, if L3ProtocolData is included in the VnfVirtualLink",
                                "additionalProperties" : false
                              }
                            },
                            "ip_address_assignment" : {
                              "type" : "boolean",
                              "description" : "Specifies if the address assignment is the responsibility of management and orchestration function or not. If it is set to True, it is the management and orchestration function responsibility"
                            },
                            "ip_address_type" : {
                              "type" : "string",
                              "description" : "Defines address type. The address type should be aligned with the address type supported by the layer_protocols properties of the connetion point",
                              "enum" : [ "ipv4", "ipv6" ]
                            },
                            "floating_ip_activated" : {
                              "type" : "boolean",
                              "description" : "Specifies if the floating IP scheme is activated on the Connection Point or not"
                            }
                          },
                          "required" : [ "ip_address_assignment", "floating_ip_activated" ]
                        }
                      },
                      "additionalProperties" : false
                    }
                  }
                },
                "additionalProperties" : false
              }
            },
            "trunk_mode" : {
              "type" : "boolean",
              "description" : "Provides information about whether the CP instantiated from this Cp is in Trunk mode (802.1Q or other), When operating in \"trunk mode\", the Cp is capable of carrying traffic for several VLANs. Absence of this property implies that trunkMode is not configured for the Cp i.e. It is equivalent to boolean value \"false\"."
            },
            "layer_protocols" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "description" : "Identifies which protocol the connection point uses for connectivity purposes",
                "additionalProperties" : false
              }
            },
            "role" : {
              "type" : "string",
              "description" : "Identifies the role of the port in the context of the traffic flow patterns in the VNF or parent NS",
              "enum" : [ "root", "leaf" ]
            },
            "description" : {
              "type" : "string",
              "description" : "Provides human-readable information on the purpose of the connection point"
            }
          },
          "additionalProperties" : false
        },
        "capabilities" : {
          "properties" : { }
        }
      }
    },
    "tosca.nodes.nfv.VnfVirtualLink" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "vl_profile" : {
              "description" : "Defines additional data for the VL",
              "properties" : {
                "qos" : {
                  "description" : "Specifies the QoS requirements of a VL instantiated according to this profile.",
                  "properties" : {
                    "latency" : {
                      "type" : "string",
                      "description" : "Specifies the maximum latency"
                    },
                    "packet_loss_ratio" : {
                      "type" : "number",
                      "description" : "Specifies the maximum packet loss ratio"
                    },
                    "packet_delay_variation" : {
                      "type" : "string",
                      "description" : "Specifies the maximum jitter"
                    }
                  },
                  "required" : [ "latency", "packet_delay_variation" ]
                },
                "min_bitrate_requirements" : {
                  "description" : "Specifies the minimum bitrate requirements for a VL instantiated according to this profile.",
                  "properties" : {
                    "root" : {
                      "type" : "number",
                      "description" : "Specifies the throughput requirement in bits per second of the link (e.g. bitrate of E-Line, root bitrate of E-Tree, aggregate capacity of E-LAN)."
                    },
                    "leaf" : {
                      "type" : "number",
                      "description" : "Specifies the throughput requirement in bits per second of leaf connections to the link when applicable to the connectivity type (e.g. for E-Tree and E LAN branches)."
                    }
                  },
                  "required" : [ "root" ]
                },
                "virtual_link_protocol_data" : {
                  "type" : "array",
                  "items" : {
                    "description" : "Specifies the protocol data for a virtual link.",
                    "properties" : {
                      "associated_layer_protocol" : {
                        "type" : "string",
                        "description" : "Identifies one of the protocols a virtualLink gives access to (ethernet, mpls, odu2, ipv4, ipv6, pseudo-wire) as specified by the connectivity_type property.",
                        "enum" : [ "ethernet", "mpls", "odu2", "ipv4", "ipv6", "pseudo-wire" ]
                      },
                      "l2_protocol_data" : {
                        "description" : "Specifies the L2 protocol data for a virtual link. Shall be present when the associatedLayerProtocol attribute indicates a L2 protocol and shall be absent otherwise.",
                        "properties" : {
                          "segmentation_id" : {
                            "type" : "string",
                            "description" : "Specifies a specific virtualised network segment, which depends on the network type. For e.g., VLAN ID for VLAN network type and tunnel ID for GRE/VXLAN network types"
                          },
                          "name" : {
                            "type" : "string",
                            "description" : "Identifies the network name associated with this L2 protocol."
                          },
                          "vlan_transparent" : {
                            "type" : "boolean",
                            "description" : "Specifies whether to support VLAN transparency for this L2 protocol or not."
                          },
                          "network_type" : {
                            "type" : "string",
                            "description" : "Specifies the network type for this L2 protocol. The value may be overridden at run-time.",
                            "enum" : [ "flat", "vlan", "vxlan", "gre" ]
                          },
                          "mtu" : {
                            "type" : "number",
                            "description" : "Specifies the maximum transmission unit (MTU) value for this L2 protocol."
                          }
                        },
                        "required" : [ "vlan_transparent" ]
                      },
                      "l3_protocol_data" : {
                        "description" : "Specifies the L3 protocol data for this virtual link.  Shall be present when the associatedLayerProtocol attribute indicates a L3 protocol and shall be absent otherwise.",
                        "properties" : {
                          "dhcp_enabled" : {
                            "type" : "boolean",
                            "description" : "Indicates whether DHCP (Dynamic Host Configuration Protocol) is enabled or disabled for this L3 protocol. The value may be overridden at run-time."
                          },
                          "ip_allocation_pools" : {
                            "type" : "array",
                            "items" : {
                              "description" : "Specifies the allocation pools with start and end IP addresses for this L3 protocol. The value may be overridden at run-time.",
                              "properties" : {
                                "start_ip_address" : {
                                  "type" : "string",
                                  "description" : "The IP address to be used as the first one in a pool of addresses derived from the cidr block full IP range"
                                },
                                "end_ip_address" : {
                                  "type" : "string",
                                  "description" : "The IP address to be used as the last one in a pool of addresses derived from the cidr block full IP range"
                                }
                              },
                              "additionalProperties" : false
                            }
                          },
                          "ipv6_address_mode" : {
                            "type" : "string",
                            "description" : "Specifies IPv6 address mode. May be present when the value of the ipVersion attribute is \"ipv6\" and shall be absent otherwise. The value may be overridden at run-time.",
                            "enum" : [ "slaac", "dhcpv6-stateful", "dhcpv6-stateless" ]
                          },
                          "ip_version" : {
                            "type" : "string",
                            "description" : "Specifies IP version of this L3 protocol. The value of the ip_version property shall be consistent with the value of the layer_protocol in the connectivity_type property of the virtual link node.",
                            "enum" : [ "ipv4", "ipv6" ]
                          },
                          "name" : {
                            "type" : "string",
                            "description" : "Identifies the network name associated with this L3 protocol."
                          },
                          "cidr" : {
                            "type" : "string",
                            "description" : "Specifies the CIDR (Classless Inter-Domain Routing) of this L3 protocol. The value may be overridden at run-time."
                          },
                          "gateway_ip" : {
                            "type" : "string",
                            "description" : "Specifies the gateway IP address for this L3 protocol. The value may be overridden at run-time."
                          }
                        },
                        "required" : [ "ip_version", "cidr" ]
                      }
                    },
                    "additionalProperties" : false
                  }
                },
                "max_bitrate_requirements" : {
                  "description" : "Specifies the maximum bitrate requirements for a VL instantiated according to this profile.",
                  "properties" : {
                    "root" : {
                      "type" : "number",
                      "description" : "Specifies the throughput requirement in bits per second of the link (e.g. bitrate of E-Line, root bitrate of E-Tree, aggregate capacity of E-LAN)."
                    },
                    "leaf" : {
                      "type" : "number",
                      "description" : "Specifies the throughput requirement in bits per second of leaf connections to the link when applicable to the connectivity type (e.g. for E-Tree and E LAN branches)."
                    }
                  },
                  "required" : [ "root" ]
                }
              },
              "required" : [ "min_bitrate_requirements", "max_bitrate_requirements" ]
            },
            "monitoring_parameters" : {
              "type" : "object",
              "patternProperties" : {
                "^" : {
                  "description" : "Describes monitoring parameters applicable to the VL",
                  "properties" : {
                    "collection_period" : {
                      "type" : "string",
                      "description" : "Describes the periodicity at which to collect the performance information."
                    },
                    "performance_metric" : {
                      "type" : "string",
                      "description" : "Identifies a performance metric to be monitored.",
                      "enum" : [ "byte_incoming", "byte_outgoing", "packet_incoming", "packet_outgoing" ]
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Human readable name of the monitoring parameter"
                    }
                  },
                  "additionalProperties" : false
                }
              }
            },
            "nfvi_maintenance_info" : {
              "description" : "Provides information on the rules to be observed when an instance based on this VnfVirtualLink is impacted during NFVI operation and maintenance (e.g. NFVI resource upgrades).",
              "properties" : {
                "supported_migration_type" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "description" : "Specifies the allowed migration types in the order of preference in case of an impact starting with the most preferred type. It is applicable to the Vdu.Compute node and to the VirtualBlockStorage, VirtualObjectStorage and VirtualFileStorage nodes.",
                    "additionalProperties" : false
                  }
                },
                "impact_notification_lead_time" : {
                  "type" : "string",
                  "description" : "Specifies the minimum notification lead time requested for upcoming impact of the virtualised resource or their group (i.e. between the notification and the action causing the impact)."
                },
                "min_recovery_time_between_impacts" : {
                  "type" : "string",
                  "description" : "Specifies the time required by the group to recover from an impact, thus, the minimum time requested between consecutive impacts of the group.."
                },
                "min_number_of_preserved_instances" : {
                  "type" : "array",
                  "items" : {
                    "description" : "Specifies for different group sizes the minimum number of instances which need to be preserved simultaneously within the group of virtualised resources.",
                    "properties" : {
                      "group_size" : {
                        "type" : "number",
                        "description" : "Determines the size of the group for which the min_number_of_preserved_instances is specified. If not present the size is not limited."
                      },
                      "min_number_of_preserved_instances" : {
                        "type" : "number",
                        "description" : "The minimum number of instances which need to be preserved simultaneously within the group of the specified size."
                      }
                    },
                    "additionalProperties" : false
                  }
                },
                "max_number_of_impacted_instances" : {
                  "type" : "array",
                  "items" : {
                    "description" : "Specifies for different group sizes the maximum number of instances that can be impacted simultaneously within the group of virtualised resources without losing functionality.",
                    "properties" : {
                      "group_size" : {
                        "type" : "number",
                        "description" : "Determines the size of the group for which the max_number_of_impacted_instances is specified. If not present the size is not limited."
                      },
                      "max_number_of_impacted_instances" : {
                        "type" : "number",
                        "description" : "The maximum number of instances that can be impacted simultaneously within the group of the specified size."
                      }
                    },
                    "additionalProperties" : false
                  }
                },
                "is_impact_mitigation_requested" : {
                  "type" : "boolean",
                  "description" : "Indicates whether it is requested that at the time of the notification of an upcoming change that is expected to have an impact on the VNF, virtualised resource(s) of the same characteristics as the impacted ones is/are provided to compensate for the impact (TRUE) or not (FALSE)."
                },
                "max_undetectable_interruption_time" : {
                  "type" : "string",
                  "description" : "Specifies the maximum interruption time that can go undetected at the VNF level and therefore which will not trigger VNF-internal recovery during live migration. It is applicable to the Vdu.Compute node and to the VirtualBlockStorage, VirtualObjectStorage and VirtualFileStorage nodes."
                }
              },
              "required" : [ "impact_notification_lead_time", "is_impact_mitigation_requested" ]
            },
            "description" : {
              "type" : "string",
              "description" : "Provides human-readable information on the purpose of the VL"
            },
            "test_access" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "description" : "Test access facilities available on the VL",
                "additionalProperties" : false
              }
            },
            "connectivity_type" : {
              "description" : "Specifies the protocol exposed by the VL and the flow pattern supported by the VL",
              "properties" : {
                "layer_protocols" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "description" : "Identifies the protocol a virtualLink gives access to (ethernet, mpls, odu2, ipv4, ipv6, pseudo-wire).The top layer protocol of the virtualLink protocol stack shall always be provided. The lower layer protocols may be included when there are specific requirements on these layers.",
                    "additionalProperties" : false
                  }
                },
                "flow_pattern" : {
                  "type" : "string",
                  "description" : "Identifies the flow pattern of the connectivity",
                  "enum" : [ "line", "tree", "mesh" ]
                }
              },
              "required" : [ "layer_protocols" ]
            }
          },
          "required" : [ "vl_profile", "connectivity_type" ],
          "additionalProperties" : false
        },
        "capabilities" : {
          "properties" : { }
        }
      }
    },
    "tosca.nodes.nfv.VipCp" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "dedicated_ip_address" : {
              "type" : "boolean",
              "description" : "Indicates whether the VIP address shall be different from the addresses allocated to all associated VduCp instances or shall be the same as one of them."
            },
            "vip_function" : {
              "type" : "string",
              "description" : "Indicates the function the virtual IP address is used for: high availability or load balancing. When used for high availability, only one of the internal VDU CP instances or VNF external CP instances that share the virtual IP is bound to the VIP address at a time. When used for load balancing purposes all CP instances that share the virtual IP are bound to it.",
              "enum" : [ "high_availability", "load_balance" ]
            },
            "protocol" : {
              "type" : "array",
              "items" : {
                "description" : "Provides information on the addresses to be assigned to the connection point(s) instantiated from this Connection Point Descriptor",
                "properties" : {
                  "associated_layer_protocol" : {
                    "type" : "string",
                    "description" : "One of the values of the property layer_protocols of the CP",
                    "enum" : [ "ethernet", "mpls", "odu2", "ipv4", "ipv6", "pseudo-wire" ]
                  },
                  "address_data" : {
                    "type" : "array",
                    "items" : {
                      "description" : "Provides information on the addresses to be assigned to the CP",
                      "properties" : {
                        "address_type" : {
                          "type" : "string",
                          "description" : "Describes the type of the address to be assigned to a connection point. The content type shall be aligned with the address type supported by the layerProtocol property of the connection point",
                          "enum" : [ "mac_address", "ip_address" ]
                        },
                        "l2_address_data" : {
                          "description" : "Provides the information on the MAC addresses to be assigned to a connection point.",
                          "properties" : {
                            "mac_address_assignment" : {
                              "type" : "boolean",
                              "description" : "Specifies if the address assignment is the responsibility of management and orchestration function or not. If it is set to True, it is the management and orchestration function responsibility"
                            }
                          },
                          "required" : [ "mac_address_assignment" ]
                        },
                        "l3_address_data" : {
                          "description" : "Provides the information on the IP addresses to be assigned to a connection point",
                          "properties" : {
                            "number_of_ip_address" : {
                              "type" : "number",
                              "description" : "Minimum number of IP addresses to be assigned"
                            },
                            "fixed_ip_address" : {
                              "type" : "array",
                              "items" : {
                                "type" : "string",
                                "description" : "IP address to be assigned to the CP instance. This attribute is only permitted for Cpds without external connectivity, i.e. connectivity outside the VNF. If present, it shall be compatible with the values of the L3ProtocolData of the VnfVirtualLink referred to by the Cp, if L3ProtocolData is included in the VnfVirtualLink",
                                "additionalProperties" : false
                              }
                            },
                            "ip_address_assignment" : {
                              "type" : "boolean",
                              "description" : "Specifies if the address assignment is the responsibility of management and orchestration function or not. If it is set to True, it is the management and orchestration function responsibility"
                            },
                            "ip_address_type" : {
                              "type" : "string",
                              "description" : "Defines address type. The address type should be aligned with the address type supported by the layer_protocols properties of the connetion point",
                              "enum" : [ "ipv4", "ipv6" ]
                            },
                            "floating_ip_activated" : {
                              "type" : "boolean",
                              "description" : "Specifies if the floating IP scheme is activated on the Connection Point or not"
                            }
                          },
                          "required" : [ "ip_address_assignment", "floating_ip_activated" ]
                        }
                      },
                      "additionalProperties" : false
                    }
                  }
                },
                "additionalProperties" : false
              }
            },
            "trunk_mode" : {
              "type" : "boolean",
              "description" : "Provides information about whether the CP instantiated from this Cp is in Trunk mode (802.1Q or other), When operating in \"trunk mode\", the Cp is capable of carrying traffic for several VLANs. Absence of this property implies that trunkMode is not configured for the Cp i.e. It is equivalent to boolean value \"false\"."
            },
            "layer_protocols" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "description" : "Identifies which protocol the connection point uses for connectivity purposes",
                "additionalProperties" : false
              }
            },
            "role" : {
              "type" : "string",
              "description" : "Identifies the role of the port in the context of the traffic flow patterns in the VNF or parent NS",
              "enum" : [ "root", "leaf" ]
            },
            "description" : {
              "type" : "string",
              "description" : "Provides human-readable information on the purpose of the connection point"
            }
          },
          "required" : [ "dedicated_ip_address", "vip_function" ],
          "additionalProperties" : false
        }
      }
    },
    "tosca.nodes.nfv.VduSubCp" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "segmentation_id" : {
              "type" : "number",
              "description" : "Specifies the segmentation ID for the subport, which is used to differentiate the traffics on different networks coming in and out of the trunk port."
            },
            "segmentation_type" : {
              "type" : "string",
              "description" : "Specifies the encapsulation type for the traffics coming in and out of the trunk subport.",
              "enum" : [ "vlan", "inherit" ]
            },
            "protocol" : {
              "type" : "array",
              "items" : {
                "description" : "Provides information on the addresses to be assigned to the connection point(s) instantiated from this Connection Point Descriptor",
                "properties" : {
                  "associated_layer_protocol" : {
                    "type" : "string",
                    "description" : "One of the values of the property layer_protocols of the CP",
                    "enum" : [ "ethernet", "mpls", "odu2", "ipv4", "ipv6", "pseudo-wire" ]
                  },
                  "address_data" : {
                    "type" : "array",
                    "items" : {
                      "description" : "Provides information on the addresses to be assigned to the CP",
                      "properties" : {
                        "address_type" : {
                          "type" : "string",
                          "description" : "Describes the type of the address to be assigned to a connection point. The content type shall be aligned with the address type supported by the layerProtocol property of the connection point",
                          "enum" : [ "mac_address", "ip_address" ]
                        },
                        "l2_address_data" : {
                          "description" : "Provides the information on the MAC addresses to be assigned to a connection point.",
                          "properties" : {
                            "mac_address_assignment" : {
                              "type" : "boolean",
                              "description" : "Specifies if the address assignment is the responsibility of management and orchestration function or not. If it is set to True, it is the management and orchestration function responsibility"
                            }
                          },
                          "required" : [ "mac_address_assignment" ]
                        },
                        "l3_address_data" : {
                          "description" : "Provides the information on the IP addresses to be assigned to a connection point",
                          "properties" : {
                            "number_of_ip_address" : {
                              "type" : "number",
                              "description" : "Minimum number of IP addresses to be assigned"
                            },
                            "fixed_ip_address" : {
                              "type" : "array",
                              "items" : {
                                "type" : "string",
                                "description" : "IP address to be assigned to the CP instance. This attribute is only permitted for Cpds without external connectivity, i.e. connectivity outside the VNF. If present, it shall be compatible with the values of the L3ProtocolData of the VnfVirtualLink referred to by the Cp, if L3ProtocolData is included in the VnfVirtualLink",
                                "additionalProperties" : false
                              }
                            },
                            "ip_address_assignment" : {
                              "type" : "boolean",
                              "description" : "Specifies if the address assignment is the responsibility of management and orchestration function or not. If it is set to True, it is the management and orchestration function responsibility"
                            },
                            "ip_address_type" : {
                              "type" : "string",
                              "description" : "Defines address type. The address type should be aligned with the address type supported by the layer_protocols properties of the connetion point",
                              "enum" : [ "ipv4", "ipv6" ]
                            },
                            "floating_ip_activated" : {
                              "type" : "boolean",
                              "description" : "Specifies if the floating IP scheme is activated on the Connection Point or not"
                            }
                          },
                          "required" : [ "ip_address_assignment", "floating_ip_activated" ]
                        }
                      },
                      "additionalProperties" : false
                    }
                  }
                },
                "additionalProperties" : false
              }
            },
            "trunk_mode" : {
              "type" : "boolean",
              "description" : "Provides information about whether the CP instantiated from this Cp is in Trunk mode (802.1Q or other), When operating in \"trunk mode\", the Cp is capable of carrying traffic for several VLANs. Absence of this property implies that trunkMode is not configured for the Cp i.e. It is equivalent to boolean value \"false\"."
            },
            "layer_protocols" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "description" : "Identifies which protocol the connection point uses for connectivity purposes",
                "additionalProperties" : false
              }
            },
            "role" : {
              "type" : "string",
              "description" : "Identifies the role of the port in the context of the traffic flow patterns in the VNF or parent NS",
              "enum" : [ "root", "leaf" ]
            },
            "description" : {
              "type" : "string",
              "description" : "Provides human-readable information on the purpose of the connection point"
            },
            "virtual_network_interface_requirements" : {
              "type" : "array",
              "items" : {
                "description" : "Specifies requirements on a virtual network interface realising  the CPs instantiated from this CPD",
                "properties" : {
                  "network_interface_requirements" : {
                    "type" : "object",
                    "patternProperties" : {
                      "^" : {
                        "type" : "string",
                        "description" : "The network interface requirements. A map of strings that contain a set of key-value pairs that describes the hardware platform specific  network interface deployment requirements.",
                        "additionalProperties" : false
                      }
                    }
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Provides a human readable name for the requirement."
                  },
                  "support_mandatory" : {
                    "type" : "boolean",
                    "description" : "Indicates whether fulfilling the constraint is mandatory (TRUE) for successful operation or desirable (FALSE)."
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "Provides a human readable description of the requirement."
                  },
                  "nic_io_requirements" : {
                    "description" : "references (couples) the CP with any logical node I/O requirements (for network devices) that may have been created. Linking these attributes is necessary so that so that I/O requirements that need to be articulated at the logical node level can be associated with the network interface requirements associated with the CP.",
                    "properties" : {
                      "logical_node_requirements" : {
                        "type" : "object",
                        "patternProperties" : {
                          "^" : {
                            "type" : "string",
                            "description" : "The logical node-level compute, memory and I/O requirements. A map  of strings that contains a set of key-value pairs that describes hardware platform specific deployment requirements, including the number of CPU cores on this logical node, a memory configuration specific to a logical node  or a requirement related to the association of an I/O device with the logical node.",
                            "additionalProperties" : false
                          }
                        }
                      }
                    }
                  }
                },
                "additionalProperties" : false
              }
            },
            "bitrate_requirement" : {
              "type" : "number",
              "description" : "Bitrate requirement in bit per second on this connection point"
            },
            "vnic_type" : {
              "type" : "string",
              "description" : "Describes the type of the virtual network interface realizing the CPs instantiated from this CPD",
              "enum" : [ "normal", "macvtap", "direct", "baremetal", "virtio-forwarder", "direct-physical", "smart-nic", "bridge", "ipvlan", "loopback", "macvlan", "ptp", "vlan", "host-device" ]
            },
            "order" : {
              "type" : "number",
              "description" : "The order of the NIC on the compute instance (e.g.eth2)"
            }
          },
          "additionalProperties" : false
        }
      }
    },
    "tosca.nodes.nfv.Vdu.OsContainer" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "ephemeral_storage_resource_limit" : {
              "type" : "string",
              "description" : "Size of ephemeral storage resources the OS container can maximum use (e.g. in GB)."
            },
            "requested_memory_resources" : {
              "type" : "string",
              "description" : "Amount of memory resources requested for the OS container (e.g. in MB)."
            },
            "memory_resource_limit" : {
              "type" : "string",
              "description" : "Amount of memory resources the OS container can maximum use (e.g. in MB)."
            },
            "cpu_resource_limit" : {
              "type" : "number",
              "description" : "Number of CPU resources the OS container can maximally use (e.g. in milli-CPU)."
            },
            "huge_pages_resources" : {
              "type" : "array",
              "items" : {
                "description" : "The requirement for huge pages resources. Each element in the list indicates a hugepage size and the total memory requested for hugepages of that size.",
                "properties" : {
                  "hugepage_size" : {
                    "type" : "string",
                    "description" : "Specifies the size of the hugepage."
                  },
                  "requested_size" : {
                    "type" : "string",
                    "description" : "Specifies the total size required for all the hugepages of the size indicated by hugepage_size."
                  }
                },
                "additionalProperties" : false
              }
            },
            "name" : {
              "type" : "string",
              "description" : "Human readable name of the OS container"
            },
            "requested_cpu_resources" : {
              "type" : "number",
              "description" : "Number of CPU resources requested for the OS container (e.g. in milli-CPU-s)."
            },
            "description" : {
              "type" : "string",
              "description" : "Human readable description of the OS container"
            },
            "extended_resource_requests" : {
              "type" : "array",
              "items" : {
                "description" : "Extended resources and their respective amount required by the container.",
                "properties" : {
                  "amount" : {
                    "type" : "number",
                    "description" : "Requested amount of the indicated extended resource."
                  },
                  "extended_resource" : {
                    "type" : "object",
                    "patternProperties" : {
                      "^" : {
                        "type" : "string",
                        "description" : "The hardware platform specific extended resource. A map of string that contains one single key-value pair that describes one hardware platform specific container requirement.",
                        "additionalProperties" : false
                      }
                    }
                  }
                },
                "additionalProperties" : false
              }
            },
            "requested_ephemeral_storage_resources" : {
              "type" : "string",
              "description" : "Size of ephemeral storage resources requested for the OS container (e.g. in GB)."
            }
          },
          "required" : [ "name", "description" ],
          "additionalProperties" : false
        },
        "capabilities" : {
          "properties" : { }
        }
      }
    },
    "tosca.nodes.nfv.Vdu.OsContainerDeployableUnit" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "requested_additional_capabilities" : {
              "type" : "object",
              "patternProperties" : {
                "^" : {
                  "description" : "Describes additional capability for a particular OS container",
                  "properties" : {
                    "preferred_requested_additional_capability_version" : {
                      "type" : "string",
                      "description" : "Identifies the preferred version of the requested additional capability."
                    },
                    "target_performance_parameters" : {
                      "type" : "object",
                      "patternProperties" : {
                        "^" : {
                          "type" : "string",
                          "description" : "Identifies specific attributes, dependent on the requested additional capability type.",
                          "additionalProperties" : false
                        }
                      }
                    },
                    "requested_additional_capability_name" : {
                      "type" : "string",
                      "description" : "Identifies a requested additional capability for the VDU."
                    },
                    "support_mandatory" : {
                      "type" : "boolean",
                      "description" : "Indicates whether the requested additional capability is mandatory for successful operation."
                    },
                    "min_requested_additional_capability_version" : {
                      "type" : "string",
                      "description" : "Identifies the minimum version of the requested additional capability."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            },
            "mcio_constraint_params" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "description" : "Defines the parameter names for constraints expected to be assigned to MCIOs realizing this Vdu.OsContainerDeployableUnit. The value specifies the standardized semantical context of the MCIO constraints.",
                "additionalProperties" : false
              }
            },
            "name" : {
              "type" : "string",
              "description" : "Human readable name of the VDU"
            },
            "nfvi_constraints" : {
              "type" : "object",
              "patternProperties" : {
                "^" : {
                  "type" : "string",
                  "description" : "Describes constraints on the NFVI for the VNFC instance(s) created from this VDU. This property is reserved for future use in the present document.",
                  "additionalProperties" : false
                }
              }
            },
            "description" : {
              "type" : "string",
              "description" : "Human readable description of the VDU"
            },
            "logical_node" : {
              "type" : "object",
              "patternProperties" : {
                "^" : {
                  "description" : "Describes the Logical Node requirements",
                  "properties" : {
                    "logical_node_requirements" : {
                      "type" : "object",
                      "patternProperties" : {
                        "^" : {
                          "type" : "string",
                          "description" : "The logical node-level compute, memory and I/O requirements. A map  of strings that contains a set of key-value pairs that describes hardware platform specific deployment requirements, including the number of CPU cores on this logical node, a memory configuration specific to a logical node  or a requirement related to the association of an I/O device with the logical node.",
                          "additionalProperties" : false
                        }
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            },
            "vdu_profile" : {
              "description" : "Defines additional instantiation data for the Vdu.OsContainerDeployableUnit node",
              "properties" : {
                "nfvi_maintenance_info" : {
                  "description" : "Provides information on the impact tolerance and rules to be observed when instance(s) of the Vdu.Compute (for VM based VDU) are impacted during NFVI operation and maintenance (e.g. NFVI resource upgrades).",
                  "properties" : {
                    "supported_migration_type" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "description" : "Specifies the allowed migration types in the order of preference in case of an impact starting with the most preferred type. It is applicable to the Vdu.Compute node and to the VirtualBlockStorage, VirtualObjectStorage and VirtualFileStorage nodes.",
                        "additionalProperties" : false
                      }
                    },
                    "impact_notification_lead_time" : {
                      "type" : "string",
                      "description" : "Specifies the minimum notification lead time requested for upcoming impact of the virtualised resource or their group (i.e. between the notification and the action causing the impact)."
                    },
                    "min_recovery_time_between_impacts" : {
                      "type" : "string",
                      "description" : "Specifies the time required by the group to recover from an impact, thus, the minimum time requested between consecutive impacts of the group.."
                    },
                    "min_number_of_preserved_instances" : {
                      "type" : "array",
                      "items" : {
                        "description" : "Specifies for different group sizes the minimum number of instances which need to be preserved simultaneously within the group of virtualised resources.",
                        "properties" : {
                          "group_size" : {
                            "type" : "number",
                            "description" : "Determines the size of the group for which the min_number_of_preserved_instances is specified. If not present the size is not limited."
                          },
                          "min_number_of_preserved_instances" : {
                            "type" : "number",
                            "description" : "The minimum number of instances which need to be preserved simultaneously within the group of the specified size."
                          }
                        },
                        "additionalProperties" : false
                      }
                    },
                    "max_number_of_impacted_instances" : {
                      "type" : "array",
                      "items" : {
                        "description" : "Specifies for different group sizes the maximum number of instances that can be impacted simultaneously within the group of virtualised resources without losing functionality.",
                        "properties" : {
                          "group_size" : {
                            "type" : "number",
                            "description" : "Determines the size of the group for which the max_number_of_impacted_instances is specified. If not present the size is not limited."
                          },
                          "max_number_of_impacted_instances" : {
                            "type" : "number",
                            "description" : "The maximum number of instances that can be impacted simultaneously within the group of the specified size."
                          }
                        },
                        "additionalProperties" : false
                      }
                    },
                    "is_impact_mitigation_requested" : {
                      "type" : "boolean",
                      "description" : "Indicates whether it is requested that at the time of the notification of an upcoming change that is expected to have an impact on the VNF, virtualised resource(s) of the same characteristics as the impacted ones is/are provided to compensate for the impact (TRUE) or not (FALSE)."
                    },
                    "max_undetectable_interruption_time" : {
                      "type" : "string",
                      "description" : "Specifies the maximum interruption time that can go undetected at the VNF level and therefore which will not trigger VNF-internal recovery during live migration. It is applicable to the Vdu.Compute node and to the VirtualBlockStorage, VirtualObjectStorage and VirtualFileStorage nodes."
                    }
                  },
                  "required" : [ "impact_notification_lead_time", "is_impact_mitigation_requested" ]
                },
                "min_number_of_instances" : {
                  "type" : "number",
                  "description" : "Minimum number of instances of the VNFC based on this Vdu.Compute (for VM based VDU) or Vdu.OsContainerDeployableUnit node (for Oscontainer based VDU) that is permitted to exist for a particular VNF deployment flavour."
                },
                "max_number_of_instances" : {
                  "type" : "number",
                  "description" : "Maximum number of instances of the VNFC based on this Vdu.Compute (for VM based VDU) or Vdu.OsContainerDeployableUnit node (for Oscontainer based VDU) that is permitted to exist for a particular VNF deployment flavour."
                }
              },
              "required" : [ "min_number_of_instances", "max_number_of_instances" ]
            }
          },
          "required" : [ "name", "description", "vdu_profile" ],
          "additionalProperties" : false
        },
        "capabilities" : {
          "properties" : { }
        }
      }
    },
    "tosca.nodes.nfv.Mciop" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "tosca.nodes.nfv.VirtualCp" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "additionalServiceData" : {
              "type" : "array",
              "items" : {
                "description" : "References the VDU(s) which implement this service",
                "properties" : {
                  "serviceData" : {
                    "type" : "string",
                    "description" : "Service matching information exposed by the VirtualCp."
                  },
                  "portData" : {
                    "type" : "array",
                    "items" : {
                      "description" : "Service port numbers exposed by the VirtualCp.",
                      "properties" : {
                        "protocol" : {
                          "type" : "string",
                          "description" : "The L4 protocol for this port exposed by the VirtualCp.",
                          "enum" : [ "tcp", "udp", "sctp" ]
                        },
                        "portConfigurable" : {
                          "type" : "boolean",
                          "description" : "Specifies whether the port attribute value is allowed to be configurable."
                        },
                        "port" : {
                          "type" : "number",
                          "description" : "The L4 port number exposed by the VirtualCp."
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "The name of the port exposed by the VirtualCp."
                        }
                      },
                      "additionalProperties" : false
                    }
                  }
                },
                "additionalProperties" : false
              }
            },
            "protocol" : {
              "type" : "array",
              "items" : {
                "description" : "Provides information on the addresses to be assigned to the connection point(s) instantiated from this Connection Point Descriptor",
                "properties" : {
                  "associated_layer_protocol" : {
                    "type" : "string",
                    "description" : "One of the values of the property layer_protocols of the CP",
                    "enum" : [ "ethernet", "mpls", "odu2", "ipv4", "ipv6", "pseudo-wire" ]
                  },
                  "address_data" : {
                    "type" : "array",
                    "items" : {
                      "description" : "Provides information on the addresses to be assigned to the CP",
                      "properties" : {
                        "address_type" : {
                          "type" : "string",
                          "description" : "Describes the type of the address to be assigned to a connection point. The content type shall be aligned with the address type supported by the layerProtocol property of the connection point",
                          "enum" : [ "mac_address", "ip_address" ]
                        },
                        "l2_address_data" : {
                          "description" : "Provides the information on the MAC addresses to be assigned to a connection point.",
                          "properties" : {
                            "mac_address_assignment" : {
                              "type" : "boolean",
                              "description" : "Specifies if the address assignment is the responsibility of management and orchestration function or not. If it is set to True, it is the management and orchestration function responsibility"
                            }
                          },
                          "required" : [ "mac_address_assignment" ]
                        },
                        "l3_address_data" : {
                          "description" : "Provides the information on the IP addresses to be assigned to a connection point",
                          "properties" : {
                            "number_of_ip_address" : {
                              "type" : "number",
                              "description" : "Minimum number of IP addresses to be assigned"
                            },
                            "fixed_ip_address" : {
                              "type" : "array",
                              "items" : {
                                "type" : "string",
                                "description" : "IP address to be assigned to the CP instance. This attribute is only permitted for Cpds without external connectivity, i.e. connectivity outside the VNF. If present, it shall be compatible with the values of the L3ProtocolData of the VnfVirtualLink referred to by the Cp, if L3ProtocolData is included in the VnfVirtualLink",
                                "additionalProperties" : false
                              }
                            },
                            "ip_address_assignment" : {
                              "type" : "boolean",
                              "description" : "Specifies if the address assignment is the responsibility of management and orchestration function or not. If it is set to True, it is the management and orchestration function responsibility"
                            },
                            "ip_address_type" : {
                              "type" : "string",
                              "description" : "Defines address type. The address type should be aligned with the address type supported by the layer_protocols properties of the connetion point",
                              "enum" : [ "ipv4", "ipv6" ]
                            },
                            "floating_ip_activated" : {
                              "type" : "boolean",
                              "description" : "Specifies if the floating IP scheme is activated on the Connection Point or not"
                            }
                          },
                          "required" : [ "ip_address_assignment", "floating_ip_activated" ]
                        }
                      },
                      "additionalProperties" : false
                    }
                  }
                },
                "additionalProperties" : false
              }
            },
            "trunk_mode" : {
              "type" : "boolean",
              "description" : "Provides information about whether the CP instantiated from this Cp is in Trunk mode (802.1Q or other), When operating in \"trunk mode\", the Cp is capable of carrying traffic for several VLANs. Absence of this property implies that trunkMode is not configured for the Cp i.e. It is equivalent to boolean value \"false\"."
            },
            "layer_protocols" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "description" : "Identifies which protocol the connection point uses for connectivity purposes",
                "additionalProperties" : false
              }
            },
            "role" : {
              "type" : "string",
              "description" : "Identifies the role of the port in the context of the traffic flow patterns in the VNF or parent NS",
              "enum" : [ "root", "leaf" ]
            },
            "description" : {
              "type" : "string",
              "description" : "Provides human-readable information on the purpose of the connection point"
            }
          },
          "required" : [ "additionalServiceData" ],
          "additionalProperties" : false
        }
      }
    },
    "tosca.nodes.nfv.Cp" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "protocol" : {
              "type" : "array",
              "items" : {
                "description" : "Provides information on the addresses to be assigned to the connection point(s) instantiated from this Connection Point Descriptor",
                "properties" : {
                  "associated_layer_protocol" : {
                    "type" : "string",
                    "description" : "One of the values of the property layer_protocols of the CP",
                    "enum" : [ "ethernet", "mpls", "odu2", "ipv4", "ipv6", "pseudo-wire" ]
                  },
                  "address_data" : {
                    "type" : "array",
                    "items" : {
                      "description" : "Provides information on the addresses to be assigned to the CP",
                      "properties" : {
                        "address_type" : {
                          "type" : "string",
                          "description" : "Describes the type of the address to be assigned to a connection point. The content type shall be aligned with the address type supported by the layerProtocol property of the connection point",
                          "enum" : [ "mac_address", "ip_address" ]
                        },
                        "l2_address_data" : {
                          "description" : "Provides the information on the MAC addresses to be assigned to a connection point.",
                          "properties" : {
                            "mac_address_assignment" : {
                              "type" : "boolean",
                              "description" : "Specifies if the address assignment is the responsibility of management and orchestration function or not. If it is set to True, it is the management and orchestration function responsibility"
                            }
                          },
                          "required" : [ "mac_address_assignment" ]
                        },
                        "l3_address_data" : {
                          "description" : "Provides the information on the IP addresses to be assigned to a connection point",
                          "properties" : {
                            "number_of_ip_address" : {
                              "type" : "number",
                              "description" : "Minimum number of IP addresses to be assigned"
                            },
                            "fixed_ip_address" : {
                              "type" : "array",
                              "items" : {
                                "type" : "string",
                                "description" : "IP address to be assigned to the CP instance. This attribute is only permitted for Cpds without external connectivity, i.e. connectivity outside the VNF. If present, it shall be compatible with the values of the L3ProtocolData of the VnfVirtualLink referred to by the Cp, if L3ProtocolData is included in the VnfVirtualLink",
                                "additionalProperties" : false
                              }
                            },
                            "ip_address_assignment" : {
                              "type" : "boolean",
                              "description" : "Specifies if the address assignment is the responsibility of management and orchestration function or not. If it is set to True, it is the management and orchestration function responsibility"
                            },
                            "ip_address_type" : {
                              "type" : "string",
                              "description" : "Defines address type. The address type should be aligned with the address type supported by the layer_protocols properties of the connetion point",
                              "enum" : [ "ipv4", "ipv6" ]
                            },
                            "floating_ip_activated" : {
                              "type" : "boolean",
                              "description" : "Specifies if the floating IP scheme is activated on the Connection Point or not"
                            }
                          },
                          "required" : [ "ip_address_assignment", "floating_ip_activated" ]
                        }
                      },
                      "additionalProperties" : false
                    }
                  }
                },
                "additionalProperties" : false
              }
            },
            "trunk_mode" : {
              "type" : "boolean",
              "description" : "Provides information about whether the CP instantiated from this Cp is in Trunk mode (802.1Q or other), When operating in \"trunk mode\", the Cp is capable of carrying traffic for several VLANs. Absence of this property implies that trunkMode is not configured for the Cp i.e. It is equivalent to boolean value \"false\"."
            },
            "layer_protocols" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "description" : "Identifies which protocol the connection point uses for connectivity purposes",
                "additionalProperties" : false
              }
            },
            "role" : {
              "type" : "string",
              "description" : "Identifies the role of the port in the context of the traffic flow patterns in the VNF or parent NS",
              "enum" : [ "root", "leaf" ]
            },
            "description" : {
              "type" : "string",
              "description" : "Provides human-readable information on the purpose of the connection point"
            }
          },
          "required" : [ "layer_protocols" ],
          "additionalProperties" : false
        }
      }
    },
    "tosca.policies.Root" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "tosca.policies.Placement" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "tosca.policies.Scaling" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "tosca.policies.Update" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "tosca.policies.Performance" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "tosca.policies.nfv.InstantiationLevels" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "default_level" : {
              "type" : "string",
              "description" : "The default instantiation level for this flavour."
            },
            "levels" : {
              "type" : "object",
              "patternProperties" : {
                "^" : {
                  "description" : "Describes the various levels of resources that can be used to instantiate the VNF using this flavour.",
                  "properties" : {
                    "description" : {
                      "type" : "string",
                      "description" : "Human readable description of the level"
                    },
                    "scale_info" : {
                      "type" : "object",
                      "patternProperties" : {
                        "^" : {
                          "description" : "Represents for each aspect the scale level that corresponds to this instantiation level. scale_info shall be present if the VNF supports scaling.",
                          "properties" : {
                            "scale_level" : {
                              "type" : "number",
                              "description" : "The scale level for a particular aspect"
                            }
                          },
                          "additionalProperties" : false
                        }
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "required" : [ "levels" ],
          "additionalProperties" : false
        }
      }
    },
    "tosca.policies.nfv.VduInstantiationLevels" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "levels" : {
              "type" : "object",
              "patternProperties" : {
                "^" : {
                  "description" : "Describes the Vdu.Compute levels of resources that can be used to instantiate the VNF using this flavour",
                  "properties" : {
                    "number_of_instances" : {
                      "type" : "number",
                      "description" : "Number of instances of VNFC based on this VDU to deploy for this level."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "required" : [ "levels" ],
          "additionalProperties" : false
        }
      }
    },
    "tosca.policies.nfv.VirtualLinkInstantiationLevels" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "levels" : {
              "type" : "object",
              "patternProperties" : {
                "^" : {
                  "description" : "Describes the virtual link levels of resources that can be used to instantiate the VNF using this flavour.",
                  "properties" : {
                    "bitrate_requirements" : {
                      "description" : "Virtual link bitrate requirements for an instantiation level or bitrate delta for a scaling step",
                      "properties" : {
                        "root" : {
                          "type" : "number",
                          "description" : "Specifies the throughput requirement in bits per second of the link (e.g. bitrate of E-Line, root bitrate of E-Tree, aggregate capacity of E-LAN)."
                        },
                        "leaf" : {
                          "type" : "number",
                          "description" : "Specifies the throughput requirement in bits per second of leaf connections to the link when applicable to the connectivity type (e.g. for E-Tree and E LAN branches)."
                        }
                      },
                      "required" : [ "root" ]
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "required" : [ "levels" ],
          "additionalProperties" : false
        }
      }
    },
    "tosca.policies.nfv.ScalingAspects" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "aspects" : {
              "type" : "object",
              "patternProperties" : {
                "^" : {
                  "description" : "Describe maximum scale level for total number of scaling steps that can be applied to a particular aspect",
                  "properties" : {
                    "step_deltas" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "description" : "List of scaling deltas to be applied for the different subsequent scaling steps of this aspect. The first entry in the array shall correspond to the first scaling step (between scale levels 0 to 1) and the last entry in the array shall correspond to the last scaling step (between maxScaleLevel-1 and maxScaleLevel)",
                        "additionalProperties" : false
                      }
                    },
                    "max_scale_level" : {
                      "type" : "number",
                      "description" : "Total number of scaling steps that can be applied w.r.t. this aspect. The value of this property corresponds to the number of scaling steps can be applied to this aspect when scaling it from the minimum scale level (i.e. 0) to the maximum scale level defined by this property"
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Human readable name of the aspect"
                    },
                    "description" : {
                      "type" : "string",
                      "description" : "Human readable description of the aspect"
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "required" : [ "aspects" ],
          "additionalProperties" : false
        }
      }
    },
    "tosca.policies.nfv.VduScalingAspectDeltas" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "aspect" : {
              "type" : "string",
              "description" : "Represents the scaling aspect to which this policy applies"
            },
            "deltas" : {
              "type" : "object",
              "patternProperties" : {
                "^" : {
                  "description" : "Describes the Vdu.Compute scaling deltas to be applied for every scaling steps of a particular aspect.",
                  "properties" : {
                    "number_of_instances" : {
                      "type" : "number",
                      "description" : "Number of instances of VNFC based on this VDU to deploy for this level."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "required" : [ "aspect", "deltas" ],
          "additionalProperties" : false
        }
      }
    },
    "tosca.policies.nfv.VirtualLinkBitrateScalingAspectDeltas" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "aspect" : {
              "type" : "string",
              "description" : "Represents the scaling aspect to which this policy applies."
            },
            "deltas" : {
              "type" : "object",
              "patternProperties" : {
                "^" : {
                  "description" : "Describes the VnfVirtualLink scaling deltas to be applied for every scaling steps of a particular aspect.",
                  "properties" : {
                    "bitrate_requirements" : {
                      "description" : "Virtual link bitrate requirements for an instantiation level or bitrate delta for a scaling step",
                      "properties" : {
                        "root" : {
                          "type" : "number",
                          "description" : "Specifies the throughput requirement in bits per second of the link (e.g. bitrate of E-Line, root bitrate of E-Tree, aggregate capacity of E-LAN)."
                        },
                        "leaf" : {
                          "type" : "number",
                          "description" : "Specifies the throughput requirement in bits per second of leaf connections to the link when applicable to the connectivity type (e.g. for E-Tree and E LAN branches)."
                        }
                      },
                      "required" : [ "root" ]
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "required" : [ "aspect", "deltas" ],
          "additionalProperties" : false
        }
      }
    },
    "tosca.policies.nfv.VduInitialDelta" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "initial_delta" : {
              "description" : "Represents the initial minimum size of the VNF.",
              "properties" : {
                "number_of_instances" : {
                  "type" : "number",
                  "description" : "Number of instances of VNFC based on this VDU to deploy for this level."
                }
              },
              "required" : [ "number_of_instances" ]
            }
          },
          "required" : [ "initial_delta" ],
          "additionalProperties" : false
        }
      }
    },
    "tosca.policies.nfv.VirtualLinkBitrateInitialDelta" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "initial_delta" : {
              "description" : "Represents the initial minimum size of the VNF.",
              "properties" : {
                "bitrate_requirements" : {
                  "description" : "Virtual link bitrate requirements for an instantiation level or bitrate delta for a scaling step",
                  "properties" : {
                    "root" : {
                      "type" : "number",
                      "description" : "Specifies the throughput requirement in bits per second of the link (e.g. bitrate of E-Line, root bitrate of E-Tree, aggregate capacity of E-LAN)."
                    },
                    "leaf" : {
                      "type" : "number",
                      "description" : "Specifies the throughput requirement in bits per second of leaf connections to the link when applicable to the connectivity type (e.g. for E-Tree and E LAN branches)."
                    }
                  },
                  "required" : [ "root" ]
                }
              },
              "required" : [ "bitrate_requirements" ]
            }
          },
          "required" : [ "initial_delta" ],
          "additionalProperties" : false
        }
      }
    },
    "tosca.policies.nfv.AffinityRule" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "scope" : {
              "type" : "string",
              "description" : "scope of the rule is an NFVI_node, an NFVI_PoP, etc.",
              "enum" : [ "nfvi_node", "zone", "zone_group", "nfvi_pop", "network_link_and_node", "container_namespace", "cis_node" ]
            },
            "nfvi_maintenance_group_info" : {
              "description" : "Provides information on the impact tolerance and rules to be observed when a group of instances based on the same Vdu.Compute (for VM based VDU) node is impacted during NFVI operation and maintenance (e.g. NFVI resource upgrades).",
              "properties" : {
                "supported_migration_type" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "description" : "Specifies the allowed migration types in the order of preference in case of an impact starting with the most preferred type. It is applicable to the Vdu.Compute node and to the VirtualBlockStorage, VirtualObjectStorage and VirtualFileStorage nodes.",
                    "additionalProperties" : false
                  }
                },
                "impact_notification_lead_time" : {
                  "type" : "string",
                  "description" : "Specifies the minimum notification lead time requested for upcoming impact of the virtualised resource or their group (i.e. between the notification and the action causing the impact)."
                },
                "min_recovery_time_between_impacts" : {
                  "type" : "string",
                  "description" : "Specifies the time required by the group to recover from an impact, thus, the minimum time requested between consecutive impacts of the group.."
                },
                "min_number_of_preserved_instances" : {
                  "type" : "array",
                  "items" : {
                    "description" : "Specifies for different group sizes the minimum number of instances which need to be preserved simultaneously within the group of virtualised resources.",
                    "properties" : {
                      "group_size" : {
                        "type" : "number",
                        "description" : "Determines the size of the group for which the min_number_of_preserved_instances is specified. If not present the size is not limited."
                      },
                      "min_number_of_preserved_instances" : {
                        "type" : "number",
                        "description" : "The minimum number of instances which need to be preserved simultaneously within the group of the specified size."
                      }
                    },
                    "additionalProperties" : false
                  }
                },
                "max_number_of_impacted_instances" : {
                  "type" : "array",
                  "items" : {
                    "description" : "Specifies for different group sizes the maximum number of instances that can be impacted simultaneously within the group of virtualised resources without losing functionality.",
                    "properties" : {
                      "group_size" : {
                        "type" : "number",
                        "description" : "Determines the size of the group for which the max_number_of_impacted_instances is specified. If not present the size is not limited."
                      },
                      "max_number_of_impacted_instances" : {
                        "type" : "number",
                        "description" : "The maximum number of instances that can be impacted simultaneously within the group of the specified size."
                      }
                    },
                    "additionalProperties" : false
                  }
                },
                "is_impact_mitigation_requested" : {
                  "type" : "boolean",
                  "description" : "Indicates whether it is requested that at the time of the notification of an upcoming change that is expected to have an impact on the VNF, virtualised resource(s) of the same characteristics as the impacted ones is/are provided to compensate for the impact (TRUE) or not (FALSE)."
                },
                "max_undetectable_interruption_time" : {
                  "type" : "string",
                  "description" : "Specifies the maximum interruption time that can go undetected at the VNF level and therefore which will not trigger VNF-internal recovery during live migration. It is applicable to the Vdu.Compute node and to the VirtualBlockStorage, VirtualObjectStorage and VirtualFileStorage nodes."
                }
              },
              "required" : [ "impact_notification_lead_time", "is_impact_mitigation_requested" ]
            }
          },
          "required" : [ "scope" ],
          "additionalProperties" : false
        }
      }
    },
    "tosca.policies.nfv.AntiAffinityRule" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "scope" : {
              "type" : "string",
              "description" : "scope of the rule is an NFVI_node, an NFVI_PoP, etc.",
              "enum" : [ "nfvi_node", "zone", "zone_group", "nfvi_pop", "network_link_and_node", "container_namespace", "cis_node" ]
            },
            "nfvi_maintenance_group_info" : {
              "description" : "Provides information on the impact tolerance and rules to be observed when a group of instances based on the same Vdu.Compute node is impacted during NFVI operation and maintenance (e.g. NFVI resource upgrades).",
              "properties" : {
                "supported_migration_type" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "description" : "Specifies the allowed migration types in the order of preference in case of an impact starting with the most preferred type. It is applicable to the Vdu.Compute node and to the VirtualBlockStorage, VirtualObjectStorage and VirtualFileStorage nodes.",
                    "additionalProperties" : false
                  }
                },
                "impact_notification_lead_time" : {
                  "type" : "string",
                  "description" : "Specifies the minimum notification lead time requested for upcoming impact of the virtualised resource or their group (i.e. between the notification and the action causing the impact)."
                },
                "min_recovery_time_between_impacts" : {
                  "type" : "string",
                  "description" : "Specifies the time required by the group to recover from an impact, thus, the minimum time requested between consecutive impacts of the group.."
                },
                "min_number_of_preserved_instances" : {
                  "type" : "array",
                  "items" : {
                    "description" : "Specifies for different group sizes the minimum number of instances which need to be preserved simultaneously within the group of virtualised resources.",
                    "properties" : {
                      "group_size" : {
                        "type" : "number",
                        "description" : "Determines the size of the group for which the min_number_of_preserved_instances is specified. If not present the size is not limited."
                      },
                      "min_number_of_preserved_instances" : {
                        "type" : "number",
                        "description" : "The minimum number of instances which need to be preserved simultaneously within the group of the specified size."
                      }
                    },
                    "additionalProperties" : false
                  }
                },
                "max_number_of_impacted_instances" : {
                  "type" : "array",
                  "items" : {
                    "description" : "Specifies for different group sizes the maximum number of instances that can be impacted simultaneously within the group of virtualised resources without losing functionality.",
                    "properties" : {
                      "group_size" : {
                        "type" : "number",
                        "description" : "Determines the size of the group for which the max_number_of_impacted_instances is specified. If not present the size is not limited."
                      },
                      "max_number_of_impacted_instances" : {
                        "type" : "number",
                        "description" : "The maximum number of instances that can be impacted simultaneously within the group of the specified size."
                      }
                    },
                    "additionalProperties" : false
                  }
                },
                "is_impact_mitigation_requested" : {
                  "type" : "boolean",
                  "description" : "Indicates whether it is requested that at the time of the notification of an upcoming change that is expected to have an impact on the VNF, virtualised resource(s) of the same characteristics as the impacted ones is/are provided to compensate for the impact (TRUE) or not (FALSE)."
                },
                "max_undetectable_interruption_time" : {
                  "type" : "string",
                  "description" : "Specifies the maximum interruption time that can go undetected at the VNF level and therefore which will not trigger VNF-internal recovery during live migration. It is applicable to the Vdu.Compute node and to the VirtualBlockStorage, VirtualObjectStorage and VirtualFileStorage nodes."
                }
              },
              "required" : [ "impact_notification_lead_time", "is_impact_mitigation_requested" ]
            }
          },
          "required" : [ "scope" ],
          "additionalProperties" : false
        }
      }
    },
    "tosca.policies.nfv.SupportedVnfInterface" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "interface_name" : {
              "type" : "string",
              "description" : "Identifies an interface produced by the VNF.",
              "enum" : [ "vnf_indicator", "vnf_configuration", "vnf_lcm_coordination" ]
            },
            "details" : {
              "description" : "Provide additional data to access the interface endpoint",
              "properties" : {
                "interface_specific_data" : {
                  "type" : "object",
                  "patternProperties" : {
                    "^" : {
                      "type" : "string",
                      "description" : "Provides additional details that are specific to the type of interface considered.",
                      "additionalProperties" : false
                    }
                  }
                },
                "uri_components" : {
                  "description" : "Provides components to build a Uniform Ressource Identifier (URI) where to access the interface end point.",
                  "properties" : {
                    "path" : {
                      "type" : "string",
                      "description" : "path component of a URI."
                    },
                    "fragment" : {
                      "type" : "string",
                      "description" : "fragment component of a URI."
                    },
                    "scheme" : {
                      "type" : "string",
                      "description" : "scheme component of a URI."
                    },
                    "authority" : {
                      "description" : "Authority component of a URI",
                      "properties" : {
                        "user_info" : {
                          "type" : "string",
                          "description" : "user_info field of the authority component of a URI"
                        },
                        "port" : {
                          "type" : "string",
                          "description" : "port field of the authority component of a URI"
                        },
                        "host" : {
                          "type" : "string",
                          "description" : "host field of the authority component of a URI"
                        }
                      }
                    },
                    "query" : {
                      "type" : "string",
                      "description" : "query component of a URI."
                    }
                  },
                  "required" : [ "scheme" ]
                }
              }
            }
          },
          "required" : [ "interface_name" ],
          "additionalProperties" : false
        }
      }
    },
    "tosca.policies.nfv.SecurityGroupRule" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "tosca.policies.nfv.VnfIndicator" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "source" : {
              "type" : "string",
              "description" : "Describe the source of the indicator.",
              "enum" : [ "vnf", "em", "both_vnf_and_em" ]
            }
          },
          "required" : [ "source" ],
          "additionalProperties" : false
        }
      }
    },
    "tosca.policies.nfv.VnfPackageChange" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "referenced_coordination_actions" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "description" : "List of names of coordination actions not specified within this VNFD as a TOSCA policy of a type derived from tosca.policies.nfv.LcmCoordinationAction.",
                "additionalProperties" : false
              }
            },
            "destination_flavour_id" : {
              "type" : "string",
              "description" : "Identifies the deployment flavour in the destination VNF package for which this change applies. The flavour ID is defined in the destination VNF package."
            },
            "component_mappings" : {
              "type" : "array",
              "items" : {
                "description" : "Mapping information related to identifiers of components in source VNFD and destination VNFD that concern to the change process.",
                "properties" : {
                  "component_type" : {
                    "type" : "string",
                    "description" : "The type of component or property. Possible values differentiate whether changes concern to some VNF component (e.g. VDU, internal VLD, etc.) or property (e.g. a Scaling Aspect, etc.).",
                    "enum" : [ "vdu", "cp", "virtual_link", "virtual_storage", "instantiation_level", "scaling_aspect" ]
                  },
                  "destination_id" : {
                    "type" : "string",
                    "description" : "Identifier of the component or property in the destination VNFD."
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "Human readable description of the component changes."
                  },
                  "source_id" : {
                    "type" : "string",
                    "description" : "Identifier of the component or property in the source VNFD."
                  }
                },
                "additionalProperties" : false
              }
            },
            "additional_modification_description" : {
              "type" : "string",
              "description" : "Additional information to qualify further the change between the two versions."
            },
            "selector" : {
              "type" : "array",
              "items" : {
                "description" : "Information to identify the source and destination VNFD for the change, and the related deployment flavours.",
                "properties" : {
                  "source_descriptor_id" : {
                    "type" : "string",
                    "description" : "Identifier of the source VNFD and the source VNF package."
                  },
                  "source_flavour_id" : {
                    "type" : "string",
                    "description" : "Identifier of the deployment flavour in the source VNF package for which this data type applies."
                  },
                  "destination_descriptor_id" : {
                    "type" : "string",
                    "description" : "Identifier of the destination VNFD and the destination VNF package."
                  }
                },
                "additionalProperties" : false
              }
            },
            "modification_qualifier" : {
              "type" : "string",
              "description" : "Specifies the type of modification resulting from transitioning from srcVnfdId to dstVnfdId. The possible values are UP indicating that the destination VNF version is newer than the source version, DOWN indicating that the destination VNF version is older than the source version.",
              "enum" : [ "up", "down" ]
            },
            "actions" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "description" : "List of applicable supported LCM coordination action names (action_name) specified in this VNFD as a TOSCA policy of a type derived from tosca.policies.nfv.LcmCoordinationAction.",
                "additionalProperties" : false
              }
            }
          },
          "required" : [ "destination_flavour_id", "selector", "modification_qualifier" ],
          "additionalProperties" : false
        }
      }
    },
    "tosca.policies.nfv.LcmCoordinationAction" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "action_name" : {
              "type" : "string",
              "description" : "Coordination action name."
            }
          },
          "required" : [ "action_name" ],
          "additionalProperties" : false
        }
      }
    },
    "tosca.policies.nfv.LcmCoordinationsForLcmOperation" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "referenced_coordination_actions" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "description" : "List of names of coordination actions not specified within this VNFD as a TOSCA policy of a type derived from tosca.policies.nfv.LcmCoordinationAction.",
                "additionalProperties" : false
              }
            },
            "vnf_lcm_operation" : {
              "type" : "string",
              "description" : "The VNF LCM operation the LCM coordination actions are associated with.",
              "enum" : [ "instantiate", "scale", "scale_to_level", "change_flavour", "terminate", "heal", "operate", "change_ext_conn", "modify_info", "create_snapshot", "revert_to_snapshot" ]
            },
            "actions" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "description" : "List of applicable supported LCM coordination action names (action_name) specified in this VNFD as a TOSCA policy of a type derived from tosca.policies.nfv.LcmCoordinationAction.",
                "additionalProperties" : false
              }
            }
          },
          "required" : [ "vnf_lcm_operation" ],
          "additionalProperties" : false
        }
      }
    },
    "tosca.policies.nfv.Abstract.SecurityGroupRule" : {
      "properties" : {
        "properties" : {
          "type" : "object",
          "properties" : {
            "protocol" : {
              "type" : "string",
              "description" : "Indicates the protocol carried over the IP layer. Permitted values include any protocol defined in the IANA protocol registry, e.g. TCP, UDP, ICMP, etc.",
              "enum" : [ "hopopt", "icmp", "igmp", "ggp", "ipv4", "st", "tcp", "cbt", "egp", "igp", "bbn_rcc_mon", "nvp_ii", "pup", "argus", "emcon", "xnet", "chaos", "udp", "mux", "dcn_meas", "hmp", "prm", "xns_idp", "trunk_1", "trunk_2", "leaf_1", "leaf_2", "rdp", "irtp", "iso_tp4", "netblt", "mfe_nsp", "merit_inp", "dccp", "3pc", "idpr", "xtp", "ddp", "idpr_cmtp", "tp++", "il", "ipv6", "sdrp", "ipv6_route", "ipv6_frag", "idrp", "rsvp", "gre", "dsr", "bna", "esp", "ah", "i_nlsp", "swipe", "narp", "mobile", "tlsp", "skip", "ipv6_icmp", "ipv6_no_nxt", "ipv6_opts", "cftp", "sat_expak", "kryptolan", "rvd", "ippc", "sat_mon", "visa", "ipcv", "cpnx", "cphb", "wsn", "pvp", "br_sat_mon", "sun_nd", "wb_mon", "wb_expak", "iso_ip", "vmtp", "secure_vmtp", "vines", "ttp", "iptm", "nsfnet_igp", "dgp", "tcf", "eigrp", "ospfigp", "sprite_rpc", "larp", "mtp", "ax.25", "ipip", "micp", "scc_sp", "etherip", "encap", "gmtp", "ifmp", "pnni", "pim", "aris", "scps", "qnx", "a/n", "ip_comp", "snp", "compaq_peer", "ipx_in_ip", "vrrp", "pgm", "l2tp", "ddx", "iatp", "stp", "srp", "uti", "smp", "sm", "ptp", "isis", "fire", "crtp", "crudp", "sscopmce", "iplt", "sps", "pipe", "sctp", "fc", "rsvp_e2e_ignore", "mobility", "udp_lite", "mpls_in_ip", "manet", "hip", "shim6", "wesp", "rohc" ]
            },
            "ether_type" : {
              "type" : "string",
              "description" : "Indicates the protocol carried over the Ethernet layer.",
              "enum" : [ "ipv4", "ipv6" ]
            },
            "description" : {
              "type" : "string",
              "description" : "Human readable description of the security group rule."
            },
            "port_range_max" : {
              "type" : "number",
              "description" : "Indicates maximum port number in the range that is matched by the security group rule. If a value is provided at design-time, this value may be overridden at run-time based on other deployment requirements or constraints."
            },
            "direction" : {
              "type" : "string",
              "description" : "The direction in which the security group rule is applied. The direction of 'ingress' or 'egress' is specified against the associated CP. I.e., 'ingress' means the packets entering a CP, while 'egress' means the packets sent out of a CP.",
              "enum" : [ "ingress", "egress" ]
            },
            "port_range_min" : {
              "type" : "number",
              "description" : "Indicates minimum port number in the range that is matched by the security group rule. If a value is provided at design-time, this value may be overridden at run-time based on other deployment requirements or constraints."
            }
          },
          "required" : [ "protocol", "ether_type", "port_range_max", "direction", "port_range_min" ],
          "additionalProperties" : false
        }
      }
    }
  }
}